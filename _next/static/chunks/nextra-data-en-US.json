{"/about":{"title":"About","data":{"":"This site offers an organized and structured approach to documenting the software development approaches for ACAP Bicol."}},"/articles/deployment":{"title":"Deployment","data":{"":"(docs for this section is under construction)"}},"/articles/pdf-development":{"title":"PDF Development","data":{"pdf-bulletin-process-flow#PDF Bulletin Process Flow":"","development-requirements#Development Requirements":"Yarn\nNote: the project uses the classic stable version v1.22.22\nInstalled with \"npm install -g yarn\"\nGulp\nInstalled during dependencies installation","libraries-used#Libraries Used":"Puppeteer v14.3.0\nEJS v3.1.8","main-flow#Main Flow":"Request bulletin PDF from API endpoint\nBackend (NodeJS)\nFetch data from database\nTransform data\nFeed transformed data to the PDF generator scripts\nRender/upload PDF\nReturn PDF/report","pdf-bulletin-development#PDF Bulletin Development":"The PDF development and technical approach were strongly influenced by the requirements, particularly the need to achieve a 1:1 layout consistency with the complex bulletin images (JPEG), and to contain all text in one (1) PDF page regardless of recommendations content length. This level of precision was challenging to attain using NodeJS-compatible programmable PDF generator libraries like React-pdf, pdfmake or pdfkit.","development-process#Development Process":"","install-dependencies#Install dependencies":"Go to the /server/src/utils/pdf/livereload directory.\nInstall dependencies using yarn, \"yarn install\"","run-the-development-website#Run the development website":"Run \"yarn dev\". Wait for index page to display\nView the sample HTML sites (these translates to the PDF layout design)\ni.e. to view the 10-day HTML:\nClick the URL link: \"10-Day Farm Weather Outlook and Advisory Bulletin\"","adjust-the-html-layout-design#Adjust the HTML layout design":"Create new or update existing vanilla HTML/CSS/JS files\ni.e., for 10-day PDF, edit the file: /utils/pdf/livereload/public/tenday/index.html\nModify the index.html, section-00.css (other CSS), or main.js files to create a simple HTML page that closely matches the reference bulletin image (JPEG).\nNOTE: Ensure that certain text content is placed within <div> elements with fixed width and fixed height to keep everything contained on a single PDF page.\nUse CSS styles for printing\nFor guidance on how text and elements should be resized, refer to the \"adjustText()\" function in the /utils/pdf/livereload/public/tenday/main.js file","update-assets#Update Assets":"Add/delete new assets following the pattern (relative to the current directory, i.e., in /utils/pdf/livereload/public/tenday/)\nCSS/JS files\nPicture files\nUse mid-resolution pictures ideally having small size in KB (kilobytes) but still looks neat in the PDF, to achieve optimized, small-size network-friendly PDF files for downloading\nView the updated HTML page, re-loaded with live reload in the web browser","update-the-ejs-file#Update the EJS file":"Copy + paste updates in the HTML file to its EJS file counterpart\ni.e. for 10-day: /utils/pdf/livereload/templates/pdf-tenday.ejs\nTake note of EJS syntax for new data arrays and variables\nTake note and adjust relative URL links to new or deleted pictures","check-the-bulletin-pdf-script#Check the bulletin PDF script":"i.e., for 10-day PDF: open the file: /utils/pdf/livereload/pdf-tenday.js\nUpdate this file to sync or connect new PDF pictures, CSS, and JS files from the /utils/pdf/livereload/public/tenday/ directory\nNote: The API endpoint script for creating 10-day bulletin calls this script from the controller file /controllers/report/tenday.js","check-the-api-endpoint-controller-script#Check the API endpoint controller script":"i.e., for 10-day: open the file: /server/src/controllers/report/tenday.js\nFetch / query and transform data required by the bulletin PDF script (#6) here\nCheck and review how it uses puppeteer to create a PDF file, combining the EJS file and the vanilla CSS and JS files, returned by the \"tendayTemplatePDF()\" function.","trigger-pdf-preview#Trigger PDF preview":"Trigger PDF preview to view the new PDF layout from the frontend (i.e, Admin - Create 10-Day Bulletin PDF page)\nObserve the rendered PDF preview"}},"/checklist":{"title":"Success Checklist","data":{"":"(docs for this section is under construction)Visit this link for more information:\r\nhttps://acaptutorials.github.io/assets-cms/posts/post/?id=83Nc7KofhEU91LJOOtQd"}},"/directories":{"title":"Project Folder Structure","data":{"":"The project repository is a monorepo, containing the frontend code in the client directory, and the backend code in the server directory.Other directories within the monorepo include:\ndocs - Software development project planning documentation\nscripts - Bash scripts for various tasks"}},"/directories/client":{"title":"Client","data":{"":"The client directory contains codes and configurations/settings for the (React) NextJS frontend and Firebase. The folder tree displays the relevant files and folders.The NextJS frontend uses the pages router, since this is suitable for generating static pages to host on GitHub Pages. It uses the \"container-component\" as a dominant pattern, distinguising between logic (container) and UI (component).\nThis documentation only contains information about relevant files and directories within the client directory. For more information about NextJS-specific files and configurations (such as the next.config.js, _app.js, or document.js files), please head over to the NextJS documentation for Pages Router.","files#Files":".env.example - example keys and values to put in the .env file\n.firebaserc - Firebase configuration file\nfirebase.json - Firebase configuration file\nfirestore.rules - Firestore Rules definitions to publish in a Firebase project's Firestore Rules settings\nstorage.rules - Firebase Storage Rules definitions to publish in a Firebase project's Storage settings\nDockerfile.acap - multi-stage build Dockerfile definition for running the client on localhost development or as \"built\" static files for production deployment running on nginx.","folders#Folders":"","pages#/pages":"Components here serves as the \"container\" components in the container-component pattern, mmostly component logic\nex: \"pages/admin\", \"pages/admin/reports\",\r\n\"pages/bulletins\", \"pages/home\"","components#/components":"Components defined here serves as the \"UI\" counterpart of each \"page\" in the container components\nThey can contain nested UI components\nex: \"components/admin\", \"components/admin/reports\",\r\ncomponents/bulletins\", \"components/home\"","componentscommonui#/components/common/ui":"Common UI used everywhere\nex: loading spinners, modal, snackbar, skeleton loaders, fileuploader","componentslayout#/components/layout":"UI for massive page-wide layouting","componentsentities#/components/entities":"(main) UI with processing functions\nex: login, searchbar, auth hoc","domain#/domain":"UI subcomponents of main UI/features stored in the /components or /pages directory","srchooks#/src/hooks":"Custom hooks used for main objects","srcservices#/src/services":"Firebase API calls for main objects\nex: reports, bulletins, provinces, atbp","srcstore#/src/store":"Redux (toolkit) stores and slices\nUsed for tracking and passing heavy-weight main objects data\nex: reports, recommendations, municipalities","file-tree#File Tree":""}},"/directories/server":{"title":"Server","data":{"":"(docs for this section is under construction)"}},"/":{"title":"Welcome to ACAP Tutorials","data":{"":"This site offers a organized and structured approach to documenting the software development approaches for ACAP Bicol (initially released as ACAP 1.0 in 2022 and now updated to version 2.0 as of 2024).This is a revamped version of the previous documentation websites at:ACAP 2.0 - latest ACAP Bicol\nhttps://acaptutorials.github.io/assets-cms/posts/post/?id=cFgd8nBjkdZ6gNNkktGEACAP 1.0\nhttps://acaptutorials.github.io/assets-cms/posts/post/?id=Teo2m6os7LZtsEi0nGWw"}},"/installation":{"title":"Installation and Setup","data":{"introduction#Introduction":"These series of tutorials describe how to run ACAP-Bicol (ACAP version 2.0) on localhost, using values for a new Region, using the initial ACAP 2.0 release version v10.1.0-alpha.1, dev branch @commit 5c92235b.Fork the repository to receive the latest updates and bug fixes. Configure the following components in order to run ACAP for in your PC or laptap for localhost development.\nTo make the most of these tutorials, please create Firebase projects first as instructed from the 03 Create Firebase Projects video tutorial before proceeding.\nacap-v2 has updated source codes at Release tag v10.1.0-alpha.6, dev branch @commit e2df7bf.","post-installation#Post-Installation":"After installing ACAP, some additional setup is required. This includes configuring the web map on the Home Page, updating static PDF content, and replacing the OpenGraph thumbnails.For detailed instructions on these steps, refer to the Post-Installation section after completing the Initialization process.","repository-syncing-options#Repository Syncing Options":"If you are working on a forked repositoy that is behind several updates, you can get the latest updates or bug fixes from the parent acap-v2 repository using any of the options:\n\"Sync\" to the parent repository\nCreate a Pull Request (PR) from the parent repository (acap-v2) to your forked repository, then merge/resolve conflicts.\nPick only the target updates/fixes, then commit them to your fork\nProject Maintainers occasionally updates the parent repository acap-v2 for maintenance, bug fixes and minor/optional updates. Sometimes, introducing massive new feature updates.Of the three (3) repository syncing options mentioned, doing the first or second options ensures up to date sync with the latest updates and bug fixes."}},"/installation/accounts":{"title":"E. Accounts","data":{"":"Create ACAP admin accounts to use for testing. You may create other accounts later for RFO's to use with signing-in to ACAP's admin dashboard. The following methods require a successfully running ACAP client + server app, carrying on from IV. Integration.","login-as-superadmin#Login as Superadmin":"Login as a superadmin to create an admin account. Open a new browser tab to:\nhttp://localhost:3001/superadmin\nLogin using the superadmin login credentials:\nusername: superadmin@gmail.com\r\np/w: -\nUse the random password from the Server Setup step. If yop didn't change it, see the default acap superadmin password in the (server/src/scripts/seeders/00_superadmin/index.js) file for reference.","create-a-new-admin-account#Create a new Admin account":"Press the CREATE USER button.\nFollow the UI input prompts for creating a new Admin account.","sign-in-using-the-admin-account#Sign-in using the Admin account":"Sign-out from the superadmin account.\nOpen the browser to:\nhttp://localhost:3001/admin\nUse the Admin account created in step #2 to sign-in"}},"/installation/client-setup":{"title":"C. Client Setup","data":{"":"Please read the client's README file in /client/README.md as reference for more information on the client environment variables.\nThe 09 Client setup for localhost development video tutorial shows how to initialize the server for localhost development in more detail.","setup-environment-variables#Setup environment variables":"Update the client .env file, copying the keys and values from the .env.example file. You can leave the default values for now, but be sure to update the following with new values:\nREGION_NAME\nDEFAULT_PROVINCE\nDEFAULT_MUNICIPALITY // --> Any municipality under the DEFAULT_PROVINCE\nNEXT_PUBLIC_FIREBASE_WEB_API_KEY\nNEXT_PUBLIC_FIREBASE_WEB_AUTHDOMAIN\nNEXT_PUBLIC_FIREBASE_WEB_PROJECT_ID\nNEXT_PUBLIC_FIREBASE_WEB_STORAGE_BUCKET\nNEXT_PUBLIC_FIREBASE_WEB_MESSAGING_SENDER_ID\nNEXT_PUBLIC_FIREBASE_WEB_APP_ID\nNEXT_PUBLIC_FIREBASE_WEB_MEASUREMENT_ID\nREGION_CODE\nREGION_LAT_AND_LNG\nREGIONAL_FIELD_OFFICE\nREGION_URL\nCROPPING_CALENDAR_RICE_EXCEL_FILE\nCROPPING_CALENDAR_CORN_EXCEL_FILE\nRECOMMENDATIONS_RICE_EXCEL_FILE\nRECOMMENDATIONS_CORN_EXCEL_FILE","copy-template-files#Copy template files":"Create a directory named \"files\" under the /client/public directory: \"/client/public/files\".\nCopy the Excel files from the \"/server/src/scripts/data/dataset_v2.0\" directory to the \"files\" directory\nCopy the the /server/src/scripts/data/pagasa_seasonal_v2.xlsx Excel file to the \"files\" directory\nUse the \"files\" directory and its contents on localhost development but not push it to the repository.","update-environment-variables-after-deployment#Update environment variables after deployment":"Certain client environment variables, such as URLs (i.e., BASE_URL_PROD) will become available after deployment. Update the rest of the .env variables later after:\nSetting-up and deploying the (development and production) servers respectively to their own Render.com cloud services\nDeploying the development website to Firebase Hosting\nDeploying the production website to GitHub Pages"}},"/installation/conclusion":{"title":"F. Conclusion","data":{"":"ACAP-Bicol will display values for the region, provinces and municipalities defined in the client and server's .env file. Browse through the running (localhost) ACAP website pages to check if the new provinces and municipalities are displaying.Visit the  ACAP 1.0 Duplication Checklist post and checkout the following sections to confirm the localhost website pages. (Some items in the checklist are not yet applicable until relevant data are provided and updated).\nPublic Pages\nSuperadmin Pages\nAdmin Crop Recommendation Pages\nAdmin SMS Management Pages\nAdmin Profile\nAdmin ACAP Settings\nSecurity\nCongratulations! Now, you are ready to proceed with the Post-Installation Setup."}},"/installation/firebase":{"title":"A. Firebase Initialization","data":{"checkout-the-latest-acap-20-source-codes#Checkout the latest ACAP 2.0 source codes":"Fork the latest repository to get the latest updates and bug fixes, if you haven't already done so.Read about the latest repository version and forking notes in the Installation and Setup section for more information.","create-a-new-firebase-project-for-the-new-region#Create a new Firebase Project for the new Region":"Create a new Firebase project for the development environment of the new region. Follow the steps in the 03 Create Firebase Projects video tutorial for more information.","initialize-the-firebase-storage#Initialize the Firebase Storage":"Copy the contents of the /client/storage.rules file to the Rules tab\nSet the Firebase Storage's Cross Origin Resource Sharing (CORS) permissions using the Google Cloud Shell.\nGo to your Firebase project’s google cloud console on https://console.cloud.google.com/home.\nActivate the cloud shell by clicking the Activate Cloud Shell button on the upper right menu.\nCreate a cors.json file on the cloud shell using any of it's cloud-based text editors. Copy and paste the following contents to the JSON file:\n[\n  {\n      \"origin\": [\"*\"],\n      \"method\": [\"GET\"],\n      \"maxAgeSeconds\": 3600\n    }\n]\nRun the command on cloud shell. Replace BUCKET_NAME with your Firebase Storage bucket name.\ngsutil cors set cors.json gs://<FIREBASE_PROJECT_ID>.appspot.com\nView the current cors configuration of a bucket:\ngsutil cors get gs://<FIREBASE_PROJECT_ID>.appspot.com","initialize-the-firestore-database#Initialize the Firestore Database":"Copy the contents of the /client/firestore.rules file to the Firestore Rules tab","initialize-the-firebase-authentication#Initialize the Firebase Authentication":"Enable Email/Password Authentication"}},"/installation/integration":{"title":"D. Integration","data":{"":"This section requires a successful set-up of the Client and Server to proceed.","using-nodejs#Using NodeJS":"Do the following steps to run the client and server apps when using NodeJS for local development.","run-the-client-app#Run the client app":"Navigate to the client app using the commandline then run the script:\ncd client\r\nnpm run dev","run-the-server-app#Run the server app":"Navigate to the server app using the commandline then run the script:\ncd server\r\nnpm run dev","load-the-acap-website#Load the ACAP website":"Open a web browser and navigate to this local site to load the ACAP website on localhost:\nhttp://localhost:3000","using-docker#Using Docker":"ACAP uses Docker to run the server app in Render, using the Dockerfile. You can use this, or the Dockerfile.acap files in the /server directory to run the server app in production mode.\nDo the following steps when using Docker for localhost development. Navigate to the project's root directory then:","build-images#Build images":"Build the client and server containers for localhost development.\ndocker compose -f docker-compose.dev.yml build","run-containers#Run containers":"Create and start the development client and server containers.\ndocker compose -f docker-compose.dev.yml up","stop-containers#Stop containers":"Stop and remove the development containers, networks, images and volumes\ndocker compose -f docker-compose.dev.yml down"}},"/installation/server-setup":{"title":"B. Server Setup","data":{"":"Please read the server's README file in /server/README.md as reference for more information on the server environment variables.\nThe 08 Server Setup for Localhost Development video tutorial shows how to initialize the server for localhost development in more detail.","setup-environment-variables#Setup environment variables":"Create a .env file inside the /server directory. Copy the contents of the .env.example file in it.\nReplace the FIREBASE_SERVICE_ACC variable with the Firebase project's private key from it's service account JSON file.\nReplace the FIREBASE_PRIVATE_KEY variable with the FIREBASE_SERVICE_ACC's private_key entry.\nReplace the FIREBASE_STORAGE_BUCKET variable with your Firebase project's storage bucket\nReplace the REGION_NAME variable with a string (no white space) representing the name of your new target region\nThe server REGION_NAME should be similar with the client REGION_NAME value.\nSet AXIOS_SSL_REJECT_INVALID to 0\nIf AXIOS_SSL_REJECT_INVALID does not yet exist, please make sure that your forked repository have the most recent update from the upstream repository.\nThe AXIOS_SSL_REJECT_INVALID variable was added recently in ACAP-Bicol 1.0 v9.3.13 to fix a new bug that fails web scraping PAGASA's tropical cyclone and El Nino / La Nina web pages.\nInitially set CHECK_RANGE_YEAR to 0.\nThis variable validates that the 10-day PAGASA Excel files downloads contain the latest year.\nRunning the npm run seed:all script below will throw an error if this variable set to 1, since the sample local 10-day PAGASA Excel files used for seeding initial data have outdated dates\nSet it back to CHECK_RANGE_YEAR=1 after running the seed:all script.\nSet SPECIAL_CHARACTERS to ├â┬▒:ñ,â:\nThis variable converts the ├â┬▒ garbled text to ñ from municipality names containing the ñ character in the PAGASA 10-day weather forecast Excel files.\nAdd other key-value pairs of special characters and their normalized values, delimited by a comma as needed\nRead on this reference for more information about this bug.\nACAP 2.0 introduces several new environment variables. Add the following, while refering to the server's README file in /server/README.md for more information about these variables. Some variables need to be added or excluded in order to enable or disable the ACAP-RCMAS APIs.\nSPECIAL_CHARACTERS\nDEPLOYMENT_PLATFORM=default\nPROVINCES_ARCHIVE - Set its value after running 2. Initialize provinces and municipalities\nACAP_API_KEYS\nIS_RMCAS_API_ACTIVE=0\nROOT_API_URL\nROOT_API_URL_VERCEL\nCHECK_RANGE_YEAR","initialize-provinces-and-municipalities#Initialize provinces and municipalities":"Run ACAP's \"pagasa:municipalities\" NPM script to get a list of the latest  PAGASA-updated municipalities and province names.\nFirst navigate to the server directory from the command line then run:\nnpm run pagasa:municipalities\nEnter PAGASA's 10-day excel file URL when prompted.\nThese files, updated daily around 8:00 AM are available on https://www.pagasa.dost.gov.ph/climate/climate-prediction/10-day-climate-forecast\nEnter a specific PAGASA's 10-day excel file URL when prompted:\nhttps://pubfiles.pagasa.dost.gov.ph/pagasaweb/files/climate/tendayweatheroutlook/day1.xlsx\nReplace the PROVINCES and PROVINCES_ARCHIVE variables with the comma-separated province names of your new target region resulting from step #2.\nReplace the DEFAULT_PROVINCE .env variable with any province name from the PROVINCES comma-separated province names.","create-new-superadmin-password#Create new superadmin password":"Open the the file: /server/src/scripts/seeders/00_superadmin/index.js\nAdd a password parameter to the params object. Enter a random password, and remember its value.\nconst params = {\n  ...,\n  displayname: 'Super Admin',\n  account_level: 1,\n  password: 'some_super_secret_password'\n}","seed-default-data#Seed default data":"This script initializes the Firestore database with default values. Navigate to the server folder from the command line and run the NPM script:\nnpm run seed:all\nThis script will create default, mock (empty) values to designated Firestore collections and documents using the defined region and provinces in the .env file, which should be updated later with real values.\nThis script expects to finish without errors. Re-trace, debug and troubleshoot errors, if any will show, before proceeding to the Client Set-up section.","initialize-10-day-weather-forecast#Initialize 10-day weather forecast":"Run this server NPM script to fetch and upload the @latest PAGASA 10-day weather forecast data to the Firestore database. Navigate to the server folder from the command line and run the NPM script:\nnpm run cron:tenday","build-the-api-docs-optional#Build the API docs (Optional)":"(Optional) Build ACAP server's REST API documentation website for reference.\nNavigate to the server folder from the command line and run the NPM script:\nnpm run gen:docs\nGo to the /server/src/public/docs folder and click the index.html file to view the generated API documentation.\nThe API documentation website is also available on http://localhost:3001/docs after running the server app."}},"/post-installation":{"title":"Post-Installation","data":{"":"These tutorials contain additional post-installation instructions after initially setting up the client and server apps on the Installation section."}},"/post-installation/google-search":{"title":"SEO with Google Search Console","data":{"":"(docs for this section is under construction)"}},"/post-installation/opengraph":{"title":"Opengraph Settings","data":{"":"(docs for this section is under construction)"}},"/post-installation/pdf":{"title":"PDF Bulletins","data":{}},"/post-installation/webmap":{"title":"Web Map on Home Page","data":{"":"This section covers how to update the GeoJSON map boundaries on the Home Page (the colored province overlays).This step is labelled (Optional) because the SHAPEFILE and new AMIA Villages data for the target region may yet not be readily available during Installation.","required-files#Required Files":"These steps require the files:\nSHAPEFILE (.shp, .shx, .prj, .dbf and .cpg files) of the new region\nNew AMIA Villages information of the new region in a CSV file, following the format in the\r\n/server/src/scripts/data/amia_villages_r5.csv file.\nSince ACAP uses the provinces and municipality naming conventions from the PAGASA 10-day weather forecast Excel file, please ensure the SHAPEFILE and AMIA Villages CSV file share similar naming conventions with it.","normalize-the-shapefile#Normalize the SHAPEFILE":"Convert the SHAPEFILE to a normalized, web-friendly GeoJSON file format. (Recommended GeoJSON file size is approximately less than 500KB).\n(Optional) Use QGIS to check the SHAPEFILE for errors. Follow steps No. 2, No. 3 and No. 4 described in the URL link to check and fix SHAPEFILE errors.\r\nhttps://github.com/ciatph/ciatph.github.io/issues/33#issuecomment-769405843\n(Optional) Use the https://github.com/ciatph/shapefile-simplify tool to normalize, simplify and convert the SHAPEFILE to GeoJSON, playing around with PERCENTAGE % values that lead to a small file size with acceptable visual effects when loaded on the Home page.ACAP 1.0's GeoJSON file is available in /server/src/scripts/data/geojson/acap-bicol geojson file for reference.","upload-the-geojson-file#Upload the GeoJSON file":"","mapbox-hosting#MapBox Hosting":"Upload the normalized GeoJSON file to MapBox, or any hosting service that allows serving GeoJSON content over HTTP. The original ACAP 1.0 uses MapBox (Datasets) for hosting.Update the following variables when using MapBox:\nMAPBOX_BASEMAP_STYLE_ID\r\nMAPBOX_DATASET_ID\r\nMAPBOX_API_KEY","firebase-storage-hosting#Firebase Storage Hosting":"You can use Firebase Storage in case a new MapBox account is not readily available.Replace the NEXT_PUBLIC_GEOJSON_URL variable with the GeoJSON file's remote URL after uploading it to Firebase Storage.","upload-the-amia-villages-data#Upload the AMIA Villages Data":"Upload the new AMIA Villages information (CSV file) to Firestore.\nCopy the new CSV file to /server/src/scripts/data/amia_villages_r5.csv\nRun the server npm script:\nnpm run seed:01_amiavillages"}},"/references":{"title":"References","data":{"":"(docs for this section is under construction)"}},"/requirements":{"title":"Requirements","data":{"":"This post describes the dependencies and requirements needed to run run ACAP 1.0 (ACAP-Bicol) on a PC or laptop for local development.","development-machine#Development Machine":"Windows/Mac PC or laptop\n@least 8GB RAM or higher","software-installed#Software Installed":"Visual Studio Code (VSCode) IDE\nversion: v1.79.2 (any version that can run NodeJS)\nnvm\nnvm is optional, if you can install NodeJS LTS version 16.14.2 on item #3\nFor Windows OS\nInstall with nvm-windows\nversion 1.1.12\nFor other OS\nPlease refer to guides for installing nvm for your PC or laptop\nNodeJS LTS version 16.14.2\n(preferrably installed using nvm)\nnode version: 16.14.2\nnpm version: 8.5.0\nYarn version 1.22.19\n(installed using npm)\nGit Terminal\nFor Windows OS: GitBash\nFor non-Windows OS: (Please refer to the recommended git terminal installation methods for your OS)","programming-languagesservices#Programming Languages/Services":"React\nNodeJS\nJavaScript\nGitHub\nFirebase\nFirebase for Web\nFirebase for NodeJS (Firebase Admin)\nFirebase Services\nAuthentication\nFirestore\nStorage","cloud-service-accounts-standard-pricing#Cloud Service Accounts (standard pricing)":"GitHub (2)\nhttps://github.com\nRender (2)\nhttps://render.com\nFirebase (1) account\nhttps://firebase.google.com\nSemaphore\nhttps://semaphore.co","docker#Docker":"ACAP promotes using NodeJS to run on localhost development. Using Docker is optional, since it has Dockerfiles configured for local development and production deployment.Users are expected to have experience managing installing and setting-up Docker, if they are going to use it for development or production deployment.","microsoft-windows-1011#Microsoft Windows 10/11":"Docker Desktop\nDocker Compose version v2.27.1-desktop.1\nDocker Engine version 26.1.4, build 5650f9b","ubuntu-22041#Ubuntu 22.04.1":"Docker version 23.0.1, build a5eeb1\nDocker Compose v2.16.0"}},"/security":{"title":"Security Guidelines","data":{"":"ACAP adheres to strict security practices as defined by its technology stack, starting from its initial 1.0 version. When extending ACAP to add or enhance features, please ensure continued compliance with these security standards.\nNOTE: Further enhancements and feature updates to the initial ACAP 1.0 version may introduce new requirements to address additional use cases. Please ensure that security measures meet the expectations outlined in these new requirements.","database#Database":"Manually test and ensure using the Firestore Web API and Firestore REST APIs that:\n(a) Signed-in users cannot perform CREATE/EDIT/DELETE operations in the Firestore collections and documents defined in the Firestore Rules.\nNOTE: If there is a need to perform CREATE/EDIT/DELETE operations \"directly\" in the Firestore collections or documents using the Firestore Web API or Firestore REST APIs, please ensure the creation and testing of robust, new Firestore Rules that will meet the \"new\" requirements (ACAP 1.0 only performs such operations thru the backend NodeJS REST APIs, Database #2, Database #3). This ensures manageable security and safety, preventing security breaches like the cross-site scripting (XSS) attack example detailed here.\n(b) Signed-in users cannot CREATE new Firestore collections and documents\n(c) Public users without sign-in authentication cannot VIEW sensitive information such as phonebook contacts and email information\nEnsure that all mutative \"WRITE\" operations in the Firestore database occur only through authenticated HTTPS requests in the backend (NodeJS) REST APIs.\n(a) ACAP 1.0's Firestore Rules strictly prohibits Database #1.a and Database #1.b to enforce this.\n(b) If new requirements allow item Database #1.a to \"directly\" perform CREATE/EDIT/DELETE operations in Firestore collections or documents using the Firestore Web API or Firestore REST APIs, please ensure that \"new\" and robust Firestore Rules are created and thoroughly tested. These Rules may need to be separate from ACAP 1.0, which \"discourages this approach unless Firestore Rules can be properly enforced\".\nEnsure proper server-side validation when mutating data thru the backend (NodeJS) REST APIs.\nFirestore database security relies on properly tested Firestore Rules to ensure security, especially if its rules do not disable all VIEW/CREATE/EDIT/DELETE operations.\nPlease ensure that \"new\" and robust Firestore Rules are created and thoroughly tested, in case new database components or requirements need to be added to the ACAP 1.0 Firestore database.","sensitive-data-management#Sensitive data management":"Ensure that sensitive data and environment variables are never statically generated and deployed to the GitHub Pages or Firebase Hosting static hosting websites.\nSensitive data, secured with Firebase Authentication, Firebase Custom Claims (User/Admin Accounts #1, #2) and Firestore Rules (Database #1.c) is dynamically fetched from the Firestore Database using the Firestore Web APIs or the secure (NodeJS) REST APIs.","file-storage#File Storage":"Manually test and ensure, using the Firebase Storage Web APIs, that:\nPublic and signed-in users can only \"READ\" or download the PDF bulletin files.\nPublic and signed-in users cannot UPLOAD or DELETE files.","code-base#Code base":"Ensure that the forked climate-services-webportal-v1 (ACAP 1.0) or acap-v2 (ACAP 2.0) monorepo code base remains PRIVATE in GitHub.","useradmin-accounts#User/Admin Accounts":"Ensure that Admin accounts are created by the superadmin in the NodeJS backend using Firebase Authentication with Firebase Custom Claims, leveraging the Firebase Admin SDK to ensure maximum security.\nMore information about ACAP 1.0's Security requirements are available in its Software Requirements Specifications document available in this link (accessible only for developers with access).","references#References":"","firebase-authentication#Firebase Authentication":"Firebase Authentication [link]\nFirebase Custom Claims [link]\nFirebase Admin SDK [link]","database-1#Database":"Firestore Web API [link]\nFirestore REST APIs [link]\nFirestore Rules [link]","online-storage#Online Storage":"Firebase Storage Web APIs [link]"}},"/troubleshooting":{"title":"Troubleshooting","data":{"":"(docs for this section is under construction)"}},"/video":{"title":"ACAP Video Tutorials","data":{"introduction#Introduction":"This wiki discusses the development and cloud deployment approaches and strategies used with ACAP 1.0 (ACAP-Bicol). This page aims to serve as a go-to reference for demonstrating technical methods in videos under the Playlist section and to provide general guidelines and recommended approaches to interact with the ACAP 1.0 source codes.","tutorials#Tutorials":"ACAP Development Docs","playlist#Playlist":"(Please turn on the CC captions/subtitles and set the playback speed to 2x when watching the videos.)\nhttps://youtube.com/playlist?list=PLk51OcRoDPHbXE_iVwmG_UwmsYwNOPoEP","checklist#Checklist":"Initial ACAP 1.0 Duplication Checklist","requirements#Requirements":"Development Requirements","how-to-proceed#How to Proceed":"Quickly view and skim thru the videos under the Playlist section to get a quick grasp and summary of how ACAP-Bicol is initialized for local development to online (live) deployment.\nInitialize ACAP for your target region for localhost development by going thru the ACAP 1.0 Duplication for New Regions Running on Localhost (Development) Tutorial.\nAt this point, you may want to refer to the online video tutorials for more detailed demonstration on several topics related for ACAP's localhost development:\n06 Initialize the Source Code Repository - Part 1/2\n07 Initialize Firebase (Firestore, Storage, Authentication)\n08 Server setup for localhost development (Testing on Region 7)\n09 Client setup for localhost development (Testing on Region 7)\nRun your client + server ACAP on localhost. Visit and check Initial ACAP 1.0 Duplication Checklist to see if your ACAP initialization fits with success several success metrics for localhost development\nOnline deployment is next after finishing and wrapping up running ACAP on localhost.\nOnline deployment is quite flexible and you may use new methods, techniques and services which you may be more familiar with.\nYou may also follow ACAP's methods for these areas, which are described and demonstrated in more detail in the tutorial videos:\n10 Deployment to Development Environment\nRender Setup - Part 1 / 3  (development)\nInitial Website Deployment to Firebase Hosting - Part 2 / 3\nUsing GitHub Actions - Part 3 / 3\n11 Deployment to Production Environment\nRender Setup - Part 1 / 2  (production)\nWebsite Deployment to GitHub Pages - Part 2 / 3\nPost-Processing from GitHub Pages - Part 3 / 3","video-list#Video List":"01 Create GitHub Account\n02 Create GitHub Repositories\n03 Create Firebase Projects\n04 Create Render Accounts\n05 Create a Semaphore Account\n06 Initialize the Source Code Repository - Part 1/2\n06 Initialize the Source Code Repository - Part 2/2\n07 Initialize Firebase (Firestore, Storage, Authentication)\n08 Server setup for localhost development (Testing on Region 7)\n09 Client setup for localhost development (Testing on Region 7)\n10 Deployment to Development Environment\nRender Setup - Part 1 / 3  (development)\nInitial Website Deployment to Firebase Hosting - Part 2 / 3\nUsing GitHub Actions - Part 3 / 3\n11 Deployment to Production Environment\nRender Setup - Part 1 / 2  (production)\nWebsite Deployment to GitHub Pages - Part 2 / 3\nPost-Processing from GitHub Pages - Part 3 / 3","demo#Demo":"These demos load the website front and backend (upon sign-in) with default Firestore data of the region we used throughout the tutorials (Region 7 provinces and municipalities). To follow updating full UI references of the \"bicol\" text in later updates.","official-production-demo#Official Production Demo":"https://region7-tutorial.github.io/","development-version-demo#Development Version Demo":"https://region7-tutorial-dev.web.app"}}}