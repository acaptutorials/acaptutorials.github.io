{"/about":{"title":"About üí°","data":{"":"This site offers a more organized and structured approach to documenting the software development approaches for the Agro-Climatic Advisory Portal (ACAP), initially released as ACAP 1.0 (ACAP Bicol) at the end of 2022 and enhanced to version 2.0 in 2024.\nACAP 1.0 serves as the base model of the Agro-Climatic Advisory Portal (ACAP). Initially made for the Bicol region, it provides dynamic features setup support for other regional provinces. It served as the active ACAP version until ACAP 2.0.\nACAP 2.0 and beyond is an extension of the Agro-Climatic Advisory Portal (ACAP), a Climate Information System, expanding, enhancing, and building upon the initial ACAP 1.0 version.\nACAP 2.0 builds upon ACAP 1.0 rather than replacing it. It enhances and expands the original system while maintaining its core foundation.\nAs of July 2024, ACAP 2.0, which includes new features and upgrades, is the latest version of ACAP and will be referred to simply as \"ACAP\" until further notice.\nCheck out the¬†ACAP Changelog¬†page for information about the ACAP versions developed and released from 2022 to 2024."}},"/announcements":{"title":"Announcements üì£","data":{}},"/announcements/firebase-storage-2024":{"title":"Firebase Storage Pricing Plan Updates (2024)","data":{"":"This article is a recap of the online meeting about changes to the Firebase Storage pricing plan held last October 14, 2024.\nFirebase announced breaking changes regarding the no-cost pricing plan of their Firebase Storage service last September 2024. More information about this announcement is available in the Cloud Storage Documentation for Firebase.","faqs#FAQs":"Firebase Storage, also known as Firebase Cloud Storage, is an online cloud storage service provided by Google Firebase. It is one (1) of the four (4) major Firebase components used by ACAP aside from the Firestore Database [1], Firebase Authentication [3], and Firebase Hosting [4].ACAP uses the Firebase Storage for:\nHosting and uploading the generated PDF bulletin recommendations, allowing public PDF downloads in its PDF Bulletins Downloads page.\nHosting and storing several frontend picture assets and files or the Home page's GEOJSON map file (as an alternate option for using MapBox).\nACAP uses other Firebase components aside from the Firebase Storage. ACAP only uses the four (4) Firebase components among Firebase's list of available components/services:\nFirestore (Database) [1]\nCloud Storage (Firebase Storage) [2]\nAuthentication (Email/Password) [3]\nHosting [4]\nStarting October 30, 2024, Firebase will no longer offer the no-cost Spark plan for Firebase Storage.\nMore information about this announcement is available at https://firebase.google.cn/docs/storage/faqs-storage-changes-announced-sept-2024.\nStarting on October 30, 2024:\nInitializing new Firebase Storage instances will require a payment method. It will require new Firebase projects subscribed to the Firebase pay-as-you-go Blaze plan by default.\nExisting ACAP Firebase Storage on the no-cost Spark plan, created before October 30, 2024, will continue to work until October 2025.\nACAP Firebase Storages not subscribed to the Firebase Blaze plan after October 2025 will cease to function unless they subscribe to the Blaze plan.\nACAP Video Tutorials [1] regarding the Firebase Storage initialization will not work on Firebase projects subscribed to the standard (no-cost) Firebase plans\nNo, this announcement only affects the Firebase Storage. Discontinued support of the Firebase standard (no-cost) pricing plan only affects the Firebase Storage.\nOther Firebase components used and activated by ACAP - the Firestore Database, Firebase Authentication, and Firebase Hosting still retain their standard (no-cost) pricing plans until further announcements or changes by Google Firebase.\nSubscribing to the Firebase Blaze Plan will automatically enroll all Firebase components/services to the pay-as-you-go Blaze plan, not just the Firebase Storage.\nHowever, billing charges¬†beyond the no-cost usage quotas will only incur on manually activated Firebase services.\nThe Firebase pricing plan is accessible at https://firebase.google.com/pricing.\nSubscribing to the Firebase Blaze Plan will automatically enroll all Firebase components to the pay-as-you-go Blaze plan, including other Firebase components not used by ACAP.ACAP only uses the following Firebase components among Firebase's list of available components/services:\nFirestore (Database) [1]\nCloud Storage (Firebase Storage) [2]\nAuthentication (Email/Password) [3]\nHosting [4]\nAll Firebase components service usage (including those not used by ACAP) will only reflect in the billing upon activation in the ACAP and usage beyond the no-cost Firebase plan.\nSubscribing to the Firebase pay-as-you-go Blaze plan requires creating a Google Cloud billing account and electing credit card information for the Firebase project.\nACAP only expects usage from the Firestore Database, Firebase Storage, Authentication, and Hosting Firebase services.\nBilling subscriptions will only incur beyond standard (no-cost) usage/quotas of activated and used Firebase components/services enabled by developers.\nIf ACAP developers activate Firebase Blaze, only the four (4) services mentioned above are expected to incur costs unless additional Firebase services are manually enabled.\nRefer to the Firebase Pricing table for more information about the standard (no-cost) billing and usage quotas at\nhttps://firebase.google.com/pricing\nFirebase usage analytics are accessible at this URL with or without a subscription to the Firebase Blaze plan:\nhttps://console.firebase.google.com/project/<YOUR_FIREBASE_PROJECT>/usage\nThis page provides information for monitoring and providing insights, such as detailed pricing and usage of the active Firebase services used by the Firebase project.\nACAP expects usage only from the following Firebase services: Firestore Database, Firebase Storage, Authentication, and Hosting. ACAP's Security guidelines only cover these four (4) Firebase components, aside from general web application security practices and know-how, e.g., stressing the need for data validation [1] [2].\nDevelopers can use and activate other Firebase components as deemed necessary when needed. However, since they are not included originally in the ACAP project Firebase components, developers should care about using them responsibly to avoid incurring security issues and unexpected billing.\nYes. Some of the latest core deliverables implemented for ACAP in its 2.0 version introduced security considerations not present in the initial (1.0) version, which followed a more rigid security model that adhered to best practices in web development security. The security changes in version 2.0 resulted in a measured reduction in coverage compared to version 1.0, based on established criteria. (see table below)\nWith ACAP 2.0+, core development transitioned to a¬†new lead programmer¬†who¬†made changes to improve development speed. As part of this effort, they introduced a more flexible Firestore database setup, which streamlined workflows. While these adjustments optimized workflows, they also altered security rules, introducing new considerations that require further refinements to align with best practices.The¬†lead programmer¬†is aware of these trade-offs, and¬†since the lead programmer made these changes, they remain the best point of contact for security updates and fixes.For more details on these changes, refer to this GitHub¬†issue¬†in the parent¬†acap-v2¬†repository, which provides a summary of the lead programmer's upcoming fixes and improvements.","acap-security-criteria#ACAP Security Criteria":"This table shows the overall security criteria ensured and accounted for by ACAP's best practices in its recommended security guidelines.\nThe reduced enforcement of Cross-Site Scripting (XSS) protection particularly affects the WYSIWYG-form Crop Recommendations, leading to a reproducible security vulnerability. A detailed description is available in the parent acap-v2 GitHub issues list, with a video demonstration available upon request.\nCriteria\tPurpose\tACAP 1.0\tACAP 2.0\tUser authentication\tAuthorized, allowed, and predictable operations access to resources\t‚úÖ\t‚úÖ\tCross-Site Scripting (XSS) Protection\tPredictable billing, reliable/authentic website information, user information confidentiality, predictable data manipulation / SMS sending, protection for unvalidated writes that allow tampering with stored data, impacting system reliability, protection for injecting malicious scripts that steal user info or redirect users to phishing sites (and protection for other uncontrolled scenarios that stem from XSS)\t‚úÖ\t‚ùå\tCloud storage protection\tAuthorized, allowed, and predictable operations access to storage, predictable billing\t‚úÖ\t‚úÖ\tDatabase integrity\tAccuracy, consistency, and reliability of data stored in a database and presented to users\t‚úÖ\t‚ùå\tDatabase protection\tAuthorized, allowed, and predictable operations access to the (Firestore) database, predictable billing\t‚úÖ\t‚ùå\t\nEnsuring system integrity and strong security measures is critical when handling:\nSensitive user information (e.g., full name and contact numbers)\nPaid subscription to external services (e.g., Firebase, Semaphore)\nReliable and predictable information output and system performance","why-security-matters-before-upgrading-firebase#Why Security Matters Before Upgrading Firebase":"Activating a paid Firebase subscription unlocks advanced features, but security considerations must be addressed first. Unresolved security flaws introduced in the latest core deliverables for ACAP 2.0+ could lead to data breaches, unauthorized changes, and increased costs.\nüö´Before activating a paid Firebase subscription, consider whether unresolved ACAP Security Technical Debts exist. ACAP 2.0+ introduces known security flaws that may impact user confidentiality, system integrity, and reliability.","key-issues-include#Key issues include:":"Lenient Firestore security rules ‚Äì Direct writes via Firestore REST APIs bypass front-end controls, potentially allowing unauthorized data entry.\nTemporary Mitigation: Restrict writes using Firestore security rules.\nPermanent Mitigation: Permanently restrict writes using\n   Firestore security rules and perform database WRITE operations\n   from the Node backend coupled with data validation.\nCross-Site Scripting (XSS) vulnerability ‚Äì WYSIWYG crop recommendations (only when \"editing\" recommendations) allow unvalidated HTML input, which may lead to stored XSS attacks (malicious scripts that persist in the database and execute when viewed).\nTemporary Mitigation: Implement input sanitization before storage.\nPermanent Mitigation: Permanently restrict writes using\n   Firestore security rules and perform database WRITE operations\n   from the Node backend coupled with more\n   robust/predictable data sanitization.\nFirestore database pollution ‚Äì Insufficient validation in \"Support Services\" data allows disorganized writes, which could:\nLead to excessive Firebase usage.\nCreate unexpected document structures, affecting query performance.\nTemporary Mitigation: Validate schema before database writes.\nFor more details, see ACAP Security Technical Debts.\nIf these issues with specific information (available at the (private) parent acap-v2 GitHub Repository Issues list [1] and [2]) remain unaddressed, it may be beneficial to consult the new ACAP Maintainer who is also the lead ACAP programmer responsible for designing and implementing ACAP 2.0 before activating a paid Firebase subscription.Key topics to discuss include:\nHow security concerns introduced in ACAP 2.0+ are being addressed\nPlans for improving security and risk mitigation before enabling Firebase","next-steps-for-developers#Next Steps for Developers":"Review the Firestore security rules to restrict direct database writes.\nCheck for XSS vulnerabilities in crop recommendations and apply sanitization.\nMonitor database writes for unstructured or excessive storage.\nConsult the new ACAP Maintainer who is also the lead ACAP programmer responsible for implementing the core version 2.0+ deliverables for current mitigation strategies and planned fixes.\nACAP's Security measures and practices for Firebase only cover the Firebase components that it actively uses: Firestore Database, Firebase Storage, Authentication, and Hosting.Developers are encouraged to learn more about responsible Security measures and practices for other Firebase components or services, should they feel the need to use and activate other Firebase services (e.g., Firebase ML, Cloud Functions, Extensions, etc) for their ACAPs other than four (4) main Firebase components used by ACAP.","firebase-storage-alternate-options#Firebase Storage Alternate Options":"The meeting discussed the following alternate options for ACAP's Firebase Storage component, considering the discontinuation of its no-cost pricing plan.\nSubscribe to the Firebase Blaze Plan\nIntegrate a new standard plan (free-tier) Cloud Storage Provider to replace Firebase Storage\nUse the (Render) server file system for hosting PDFs"}},"/announcements/pagasa-10day-excel":{"title":"PAGASA 10-Day Excel Files Discontinued","data":{"":"Effective August 31, 2025","whats-changing#What's Changing":"Starting August 31, 2025, PAGASA will no longer provide its 10-Day Weather Forecast in Excel format.\nInstead, all forecasts will be delivered through the new PAGASA TenDay API launched in July 2025.\nThis means any ACAP process, report, or system that currently relies on downloading Excel files will cease to function unless updated to use the API.Note: PAGASA has not announced plans to archive past Excel files.\nClick to view the attached screenshot of PAGASA's announcement for more information.","faqs#FAQs":"The following FAQs explain who will be affected, why this change is happening, and how projects should prepare.\nProjects that use the PAGASA 10-Day Weather Forecast Excel files.It includes components in acap-v2 (ACAP 2.0) and climate-services-webportal-v1 (ACAP 1.0), plus any forks, scripts, or automated tasks fetching Excel-based forecasts:\nProvinces and municipalities listing\n10-Day Weather Forecast data\n(ACAP-RCMAS REST APIs - if these APIs are activated)\nAutomated scripts/workflows\nAfter August 31, 2025, all workflows relying on Excel files will fail unless updated to use the API.\nPAGASA is modernizing data sharing by moving from Excel files to REST APIs, reducing brittle manual steps, and enabling more robust integrations.The new PAGASA TenDay API (launched July 2025) covers both 10-Day and Seasonal weather forecasts.\nIt is not yet known whether PAGASA will also discontinue the Seasonal Weather Forecast Excel files.\nThere are currently no news or directives for syncing the parent acap-v2 code repository to the PAGASA TenDay API. Projects using it as base template (including ACAP Bicol) are advised to sync their ACAPs to the API until futher notice.\nHere are the recommended migration steps for syncing ACAP to the PAGASA TenDay API. However, feel free to adjust and customize as deemed necessary.\nReview the PAGASA TenDay API documentation.\nRequest an API key from PAGASA.\nRegional location data: Build the provinces and municipalities list from the PAGASA TenDay API, possibly from its Validation - Location endpoint at \"https://tenday.pagasa.dost.gov.ph/api/v1/location\".\nData source: Replace the 10-Day weather forecast Excel file fetch/parse logic with TenDay API REST responses.\nUpdate scripts ‚Äî Excel downloads will stop after August 31, 2025.\nTip: ACAP (1.0 until version 2.0 - 2.1) processes its provinces and municipalities list and 10-day weather forecast data using the \"npm run cron:tenday\" NPM script, under the \"/server/src/scripts/cron/update_tenday_weather\" folder.Inspect and customize scripts in this folder to sync with the PAGASA TenDay API.Revisiting ACAP's architecture diagrams in the root README and \"/server/src/scripts/generate-docs/templates/img-acap.png\" may also help.\nVisit these references to learn more about the changes.\nPAGASA TenDay API\n10-Day Weather Forecast\nProvinces and Municipalities\nACAP-RCMAS REST APIs\nDisclaimer: This documentation update does not imply ongoing involvement with the project."}},"/articles":{"title":"Articles","data":{"":"A collection of articles and notes about development and other details."}},"/articles/deployment-vercel":{"title":"Deployment to Vercel","data":{"":"ACAP Bicol started deploying its Node backend to Vercel along with the official Render deployment starting in its 2.0 version, aiming to achieve faster API response times than its (standard-pricing) Render-deployed APIs that experience 30 secs - 1 minute cold starts specifically for its ACAP-RMCAS APIs.\nACAP does not officially endorse deployment to Vercel nor activation of the ACAP-RMCAS APIs for other regions. Therefore, no step-by-step video guides demonstrate its initialization and usage, unlike the supported Render [1] [2] deployment.The Vercel deployment and new API endpoints (also accessible in the official Render deployment, if activated) are only for the prototype development purposes of sharing ACAP Bicol's internal PAGASA-sourced weather forecast data with collaborators, which needed to start using unified data sources and processes from July 2024, with an option to be activated by other regions upon request by the DA.All ACAP Node REST APIs (except for PDF bulletin creation) are supported in its Vercel deployment.\nWhile ACAP does not officially endorse and encourage deployment to Vercel, interested developers can also explore setting up and using its deployment for study purposes.\nTo ensure smooth integration with the existing ACAP 1.0 deployments other than ACAP Bicol, the Vercel deployment and activation of the ACAP-RCMAS APIs are made into optional features for ACAP 2.0 that can be triggered by supplying certain backend environment variables and GitHub Secrets/Variables.The following steps describe how ACAP configures the Vercel CLI and GitHub Actions for building and deploying its NodeJS Express server app to Vercel for reference.","vercel-requirements#Vercel Requirements":"Vercel account\nACAP Bicol uses a standard-tier Vercel account pricing plan, which limits sharing its Vercel apps to only one (1) developer.\nVercel CLI\nInstalled locally\nFor reference, ACAP is using the v28.16.7 version.\nACAP uses the Vercel CLI in GitHub Actions to deploy its Node backend to Vercel to avoid linking the code repository to Vercel. Using the Vercel CLI is one of the three (3) supported methods for deploying apps to Vercel.\nNode\nNode v16.14.2 (or ACAP's latest declared Node version)","initialize-dependencies#Initialize Dependencies":"Prepare the local PC or laptop for Vercel deployment.\nCreate a Vercel Access Token.\nLogin to Vercel.\nCreate a Vercel Access Token in Profile Icon -> Account Settings -> Tokens named VERCEL_TOKEN, selecting the \"No Expiration\" option.\nInstall Vercel CLI globally if it's not installed on the local development PC or laptop.\nYou can try installing the¬†@latest¬†CLI version and revert to v28.16.7 (used by ACAP) if the steps following the global installation fail.\nInstall the CLI version used by ACAP.\nnpm i -g vercel@28.16.7","development-app-initialization#Development App Initialization":"These steps will initialize an ACAP server app for deployment to the \"DEVELOPMENT\" Vercel environment.Repeat the following steps to initialize an ACAP server app for deployment to the \"PRODUCTION\" Vercel environment under the Production App Initialization section.","initialize-the-acap-development-vercel-app#Initialize the ACAP Development Vercel App":"Login using the Vercel CLI\nvercel login\nNavigate to the acap-v2/server directory using a terminal. Run the command to create a new Vercel project.\nvercel link\nAnswer the required prompts:\nSet up \"path/to/acap-v2/server\"? [Y/n]: Press Enter\nWhich scope should contain your project? Press Enter to select the default\nLink to existing project? [y/N]: Press Enter (n)\nWhat's your project's name?: Type any app name (e.g., \"acap-dev\") and press Enter\nIn which directory is your code located? ./: Press Enter to select the ./ default\nOther info prompts:\nLocal settings detected in vercel.json:\nNo framework detected. Default Project Settings:\n...\nWant to modify these settings? [y/N] n: Press Enter (n)\nTake note of the projectId and orgId values from the project.json file inside the generated .vercel folder.\nAdd these \"DEVELOPMENT\" Vercel values in the forked ACAPs' GitHub Secrets as:\nVERCEL_TOKEN=(Use the VERCEL_TOKEN value from step #1)\nVERCEL_ORG_ID=(value of orgId)\nVERCEL_PROJECT_ID_DEV=(value of projectId)\nVERCEL_APP_DEV=(name of the \"DEVELOPMENT\" Vercel app)\nConfirm the creation of an empty Vercel app with the project name from the prompt in the Vercel account's projects dashboard.\nGo to (Vercel Project) -> Settings -> Environment Variables. Set the environment variables similar to the \"DEVELOPMENT\" Render Environment Variables.\nEnsure similar environment variables and values in the \"DEVELOPMENT\" Render deployment with the Vercel Environment variables. Set the value:\nDEPLOYMENT_PLATFORM=vercel\nSet the development Vercel app's Runtime to Node 16.x.\nGo to the (Vercel Project) -> Settings -> General -> Node.js Version section.\nSet the Node.js Version to 16.x\nThe Vercel app's Node.js Version should be similar to its declared Node version in its server's engines section in the /server/package.json file. Vercel stops supporting old Node versions after some time, which may cause future deployments to fail.","deploy-development-local-app#Deploy Development Local App":"Prepare the local ACAP server directory for Vercel deployment. Confirm that the acap-v2/server directory has the following files:\nCreate a .vercelignore file to exclude unnecessary items from being deployed to Vercel.\nCopy the contents of the .gitignore file into the .vercelignore file.\nInclude all other directories and files to omit in the Vercel deployment in the .vercelignore file.\nMake sure that your target project directory has an /api directory that:\ncontains Vercel serverless function files following the Vercel \"api\" syntax\nOr an index.js file (for standalone Express apps), minus the app.listen() part, with the app exported as module.exports = app\nCreate a vercel.json file in the /acap-v2/server directory. See the attached vercel.json file for reference.\n{\n  \"rewrites\": [{\n    \"source\": \"/api/(.)\",\n    \"destination\": \"/api\"\n  }],\n  \"redirects\": [{\n    \"source\": \"/src(.)\",\n    \"destination\": \"/index.html\"\n  }]\n}\nGenerate the API documentation for Vercel deployment.\nnpm run gen:docs:vercel\nDeploy the \"DEVELOPMENT\" Vercel app locally for the first time from a terminal, using the \"raw\" value of the VERCEL_TOKEN variable from step #1.\nvercel pull --yes --environment=production --token=VERCEL_TOKEN\nvercel build --prod --token=VERCEL_TOKEN\nvercel deploy --prebuilt --prod --token=VERCEL_TOKEN","production-app-initialization#Production App Initialization":"These steps will initialize an ACAP server app for deployment to the \"PRODUCTION\" Vercel environment.","initialize-the-acap-production-vercel-app#Initialize the ACAP Production Vercel App":"Delete the acap-v2/server/.vercel directory generated after completing the ACAP Development App Initialization steps.\nDelete this folder to avoid conflicts setting up the \"PRODUCTION\" Vercel app.\nLogin using the Vercel CLI if not yet signed in.\nvercel login\nNavigate to the acap-v2/server directory using a terminal. Run the vercel link command to create a new Vercel project - for the \"PRODUCTION\" environment.\nvercel link\nAnswer the required prompts, similar to the ACAP Development App Initialization. Provide a different project name when prompted with the question:\nWhat's your project's name?: Type a new app name (e.g., \"acap-prod\") and press Enter\nTake note of the new projectId and orgId values from the project.json file inside the newly generated .vercel folder.\nAdd these \"PRODUCTION\" Vercel values in the forked ACAPs' GitHub Secrets as:\nVERCEL_PROJECT_ID_PROD=(value of new projectId)\nVERCEL_APP_PROD=(name of the \"PRODUCTION\" Vercel app)\nConfirm the creation of an empty Vercel app with the \"PRODUCTION\" project name created by the prompt in the Vercel account's projects dashboard.\nGo to the PRODUCTION\" (Vercel Project) -> Settings -> Environment Variables. Set the environment variables similar to the \"PRODUCTION\" Render Environment Variables.\nEnsure similar environment variables and values in the \"PRODUCTION\" Render deployment with the Vercel Environment variables. Set the value: DEPLOYMENT_PLATFORM=vercel\nSet the production Vercel app's Runtime to Node 16.x.\nThe Vercel app's Node.js Version should be similar to its declared Node version in its server's engines section in the /server/package.json file. Vercel stops supporting old Node versions after some time, which may cause future deployments to fail.","deploy-production-local-app#Deploy Production Local App":"Generate the API documentation for Vercel deployment.\nnpm run gen:docs:vercel\nDeploy the \"PRODUCTION\" Vercel app locally for the first time from the terminal. Use the \"raw\" value of the VERCEL_TOKEN variable from step #1.\nvercel pull --yes --environment=production --token=VERCEL_TOKEN\nvercel build --prod --token=VERCEL_TOKEN\nvercel deploy --prebuilt --prod --token=VERCEL_TOKEN","github-actions#GitHub Actions":"Confirm the creation of the GitHub Secrets.\nVERCEL_TOKEN - Vercel Access Token (from the Initialize Dependencies section, step #1)\nVERCEL_ORG_ID\nVercel Organization ID\nRetrieved by answering the prompts from either the Initialize the ACAP Development Vercel App or Initialize the ACAP Production Vercel App steps\nVERCEL_PROJECT_ID_DEV - Development Vercel app project ID\nVERCEL_APP_DEV - Development Vercel app project name\nVERCEL_PROJECT_ID_PROD - Production Vercel app project ID\nVERCEL_APP_PROD - Production Vercel app project name\nROOT_API_URL_VERCEL_DEV - Development Vercel app website URL\nROOT_API_URL_VERCEL_PROD - Production Vercel app website URL\nConfirm the creation of the GitHub Variable.\nDEPLOYMENT_PLATFORM\nValue: vercel\nValue: Set to default or do not include in the GitHub Variables to skip deployment to Vercel\nReview the contents of the .github/workflows/deploy-dev.yml and .github/workflows/release.yml files --> deploy-server-vercel job for more information about the GitHub Actions workflows for deployment to the \"DEVELOPMENT\" and \"PRODUCTION\" Vercel environments.\nTrigger a deployment to ACAP's development and production environments using GitHub Actions. Observe failure/success logs for the overall deployments, including Vercel.\nDelete the local /server/.vercel folder. Development or production deployments to Vercel should now trigger in GitHub Actions."}},"/articles/deployment":{"title":"Deployment","data":{"":"Refer to the Video Tutorials section items for more information about deployment and other development-related video tutorials.\nThese videos created for ACAP's initial release (ACAP 1.0) back in 2023 should still be compatible with the latest ACAP 2.0, with minor changes and updates.Follow the steps in the Render Initial Blueprint Instance section to sync its Render deployment methods with the ACAP 2.0 updates.","git-flow#Git Flow":"CI/CD using GitHub Actions deploy code updates to the development or production environments following this simplified version of Git Flow. Refer to the Git Flow page for more information about this process.","render-initial-blueprint-instance#Render Initial Blueprint Instance":"These steps complement the video tutorials for creating a Blueprint Instance, making them compatible with latest ACAP version (ACAP 2.0).\nacap-v2 has updated source codes at Release tag  dev branch @commit .","create-a-blueprint-instance#Create a Blueprint Instance":"Follow the video guides for creating a Blueprint Instance for the development or production environment.\n10 Deployment to Development Environment\n11 Deployment to Production Environment","create-render-secrets#Create Render Secrets":"ACAP 2.0 now requires Docker secrets (secret files) in its build stage to build its API documentation, using default values if \"secret\" files are undefined during the build stage.\nRender does not support adding Secrets (Docker secret files) on initial Blueprint creation. Create these Render¬†Secrets¬†with appropriate values after launching a Render¬†Web Service¬†connected to the¬†Blueprint Instance to provide correct values during the succeeding Render build stages.\nGo to Dashboard ‚Üí newly-created Web Service (associated with the Blueprint) ‚Üí Environment.\nGo to the Secret Files section under the Environment page.\nAdd the following \"Render Secrets\". Refer to the acap-v2/README file's Render Secrets section to know more about these variables and their values.\nLIVE_ORIGIN\nREGION_NAME\nROOT_API_URL\nIS_RMCAS_API_ACTIVE","update-render-variables#Update Render Variables":"Set the Render Environment variables if the ACAP-RCMAS APIs are active.Refer to the acap-v2/server/README and root acap-v2/README files' environment variables sections to know more about these variables and their values.\nIS_RMCAS_API_ACTIVE=0\nARCHIVE_TENDAY_FORECAST=0","re-deploy#Re-deploy":"Re-deploy the server (from GitHub Actions) or manually from the Render dashboard to build the correct values for the online API documentation using the Render Secret values."}},"/articles/opensource-libraries":{"title":"Use of Open Source Libraries and Frameworks","data":{"mainstream-libraries#Mainstream Libraries":"The ACAP, a web application built with React (NextJS), Node, and Firebase, uses mainstream, community-driven open source, well-tested, and documented Node libraries and frameworks, including but not limited to React/NextJS, ExpressJS, Firebase, Leaflet, Axios, and lots more.A comprehensive list of these libraries and their versions used within the project are available in the client and server package.json files of the ACAP project.","other-libraries#Other Libraries":"Besides using mainstream libraries, ACAP also uses¬†two (2)¬†newer, well-tested, and documented open-source libraries to efficiently manage specific low-impact requirements in a focused and easily extendable manner, set apart from ACAP's growing collection of internal libraries and scripts. These libraries used the open-source model to enhance collaboration and foster community contributions, ensuring that ACAP can optionally benefit from ongoing improvements and feedback, with coordination with future ACAP Maintainers.\nThese libraries encourage community contributions and feedback, with their main Maintainer overseeing the development process to ensure that all updates and contributions align with the project's goals and standards. Community input is valued and considered, but final decisions regarding updates will rest with the Maintainer.\nOne of these libraries, in particular, has goals of enhancing and thoroughly testing possible¬†Regional Provinces / Municipalities Inconsistency by offering tailored functionality and methods that will automatically sync PAGASA 10-day region/province/municipality names with PSGC data, resulting in less maintenance (customization) burden which is already beyond the original ACAP project timeline, project scope, and deliverables.¬†This initiative is essential to enhance the accuracy and reliability of the data used in the ACAP project, which is crucial for its functionality.\nSince library updates and enhancements may extend beyond the ACAP project timeline, future ACAP Maintainers and developers can choose whether to adopt its updates, continue using the current version, or adopt entirely new solutions.\nThese libraries, designed for compatibility and easy extension, follow semantic versioning. Their codes and logic, following safety and security practices, are available for inspection in the public NPM registry.\nFor more information about these open-source libraries and their goals and motivations within the ACAP project, kindly contact the ACAP Maintainers."}},"/articles/pdf-development":{"title":"PDF Development","data":{"pdf-bulletin-process-flow#PDF Bulletin Process Flow":"This is the process flow used by ACAP 1.0 for generating bulletin PDFs. Further enhancements or updates may use new processing flows and design, which should be documented here.","development-requirements#Development Requirements":"Yarn\nNote: the project uses the classic stable version v1.22.22\nInstalled with \"npm install -g yarn\"\nGulp\nInstalled during dependencies installation","libraries-used#Libraries Used":"Puppeteer v14.3.0\nEJS v3.1.8","main-flow#Main Flow":"Request bulletin PDF from API endpoint\nBackend (NodeJS)\nFetch data from database\nTransform data\nFeed transformed data to the PDF generator scripts\nRender/upload PDF\nReturn PDF/report","pdf-bulletin-development#PDF Bulletin Development":"The PDF development and technical approach were strongly influenced by the requirements, particularly the need to achieve a 1:1 layout consistency with the complex bulletin images (JPEG), and to contain all text in one (1) PDF page regardless of recommendations content length. This level of precision was challenging to attain using NodeJS-compatible programmable PDF generator libraries like React-pdf, pdfmake or pdfkit.","development-process#Development Process":"","install-dependencies#Install dependencies":"Go to the /server/src/utils/pdf/livereload directory.\nInstall dependencies using yarn, \"yarn install\"","run-the-development-website#Run the development website":"Run \"yarn dev\". Wait for index page to display\nView the sample HTML sites (these translates to the PDF layout design)\ni.e. to view the 10-day HTML:\nClick the URL link: \"10-Day Farm Weather Outlook and Advisory Bulletin\"","adjust-the-html-layout-design#Adjust the HTML layout design":"Create new or update existing vanilla HTML/CSS/JS files\ni.e., for 10-day PDF, edit the file: /utils/pdf/livereload/public/tenday/index.html\nModify the index.html, section-00.css (other CSS), or main.js files to create a simple HTML page that closely matches the reference bulletin image (JPEG).\nView the updated HTML page, re-loaded with live reload in the web browser.\nNOTE: Ensure that certain text content is placed within <div> elements with fixed width and fixed height to keep everything contained on a single PDF page.\nUse CSS styles for printing\nFor guidance on how text and elements should be resized, refer to the \"adjustText()\" function in the /utils/pdf/livereload/public/tenday/main.js file","update-assets#Update Assets":"Add/delete new assets following the pattern (relative to the current directory, i.e., in /utils/pdf/livereload/public/tenday/)\nCSS/JS files\nFont files\nPicture files\nUse mid-resolution pictures ideally having small size in KB (kilobytes) but still looks neat in the PDF, to achieve optimized, small-size network-friendly PDF files for downloading","update-the-ejs-file#Update the EJS file":"Copy + paste updates in the HTML file to its EJS file counterpart\ni.e. for 10-day: /utils/pdf/livereload/templates/pdf-tenday.ejs\nTake note of the EJS syntax for new data arrays and variables\nTake note and adjust relative URL links to new or deleted pictures","check-the-bulletin-pdf-script#Check the bulletin PDF script":"i.e., for 10-day PDF: open the file: /utils/pdf/livereload/pdf-tenday.js\nUpdate this file to sync or connect new PDF pictures, CSS, and JS files from the /utils/pdf/livereload/public/tenday/ directory\nNote: The API endpoint script for creating 10-day bulletin calls this script from the controller file /controllers/report/tenday.js","check-the-api-endpoint-controller-script#Check the API endpoint controller script":"i.e., for 10-day: open the file: /server/src/controllers/report/tenday.js\nFetch / query and transform data required by the bulletin PDF script (#6) here\nCheck and review how it uses puppeteer to create a PDF file, combining the EJS file and the vanilla CSS and JS files, returned by the \"tendayTemplatePDF()\" function.","trigger-pdf-preview#Trigger PDF preview":"Trigger PDF preview to view the new PDF layout from the frontend (i.e, Admin - Create 10-Day Bulletin PDF page)\nObserve the rendered PDF preview","additional-notes#Additional Notes":"When creating new bulletin layouts that significantly differ from the existing ones, it's often best to start from scratch with new HTML, CSS, JavaScript, and EJS files. Consider the following guidelines:\nHTML Layout: Ensure the layout matches the reference image (JPEG).\nCSS Styles: Focus on styles optimized for printing and complements the single-page HTML layout.\nJavaScript Functions: Implement functions to control text height dynamically.\nEJS File: Fetch, transform, and render the necessary data\nAssets (Picture Files): Use mid-resolution picture files to optimize the final PDF file size","sample-bulletin-jpeg-layouts#Sample bulletin (JPEG) Layouts":"JPEG bulletin picture references (from DA RFO 5) and ACAP-generated bulletin PDFs\nBulletin Type\tJPEG Picture\tJPEG Picture  (mirror)\tACAP 1.0 PDF\tACAP 2.0 PDF\tACAP 2.1 PDF\tSeasonal\tlink\tmirror\tacap-1.0-pdf  (single page)\tacap-2.0-pdf   (multiple pages)\tacap-2.1-pdf\t10-Day\tlink\tmirror\tacap-1.0-pdf\t-\tacap-2.1-pdf\tSpecial Weather Forecast\tlink\tmirror\tacap-1.0-pdf\t-\t-\tSpecial \"General\"  Weather Forecast\t-\t-\t-\tacap-2.0-pdf  (outside PAR,  no wind signal)\t-"}},"/articles/provinces-municipalities":{"title":"Provinces and Municipalities","data":{"data-source#Data Source":"ACAP uses a combination of the PAGASA 10-day weather forecast Excel files and the PAGASA Seasonal Forecast- Forecast Rainfall Analysis Table as a data source for its region, provinces, and municipalities list.\nStarting August 31, 2025, PAGASA will no longer provide the 10-Day Excel files. Check the Announcements section for more information.","faqs#FAQs":"ACAP uses the provinces and municipalities list defined in the PAGASA 10-day weather forecast Excel files, initializing or updating its internal list (per region) after running the npm run cron:tenday NPM script.\nACAP uses the region-province grouping from the PAGASA Seasonal Forecast - Forecast Rainfall Analysis Table to determine which provinces belong to a region as a reference since it also processes provincial seasonal weather forecast information from the PAGASA Seasonal Forecast. ACAP expects province naming from the two (2) data sources (PAGASA 10-day and Seasonal weather forecasts) to match since both are data products produced by PAGASA.\nRegions with a memorandum of agreement with PAGASA also receive Seasonal Weather Forecast data in an Excel file containing the Seasonal Forecast Rainfall Analysis Table through email.\nACAP initializes its province list during the Server Setup stage.\nNo. After more recent tests, it came to light that some province names defined in the PAGASA Seasonal Forecast (Forecast Rainfall Analysis Table) may not always match the province names defined in the PAGASA 10-day Excel files.For example, as of September 17, 2024, the \"Davao Occidental\" province is present in the PAGASA Seasonal Forecast (Forecast Rainfall Analysis Table) under Region XI (Davao Region). However, it is missing in the PAGASA 10-Day Excel files.Similarly, the \"Shariff Kabunsuan\" province is available in the PAGASA 10-Day Excel files, but it is nowhere to be found in the PAGASA Seasonal Forecast (Forecast Rainfall Analysis Table).Refer to the¬†Regional Provinces / Municipalities Inconsistency¬†section for more information about possible causes of region/province/municipality naming inconsistencies.\nACAP does not yet support syncing drastic national geopolitical or administrative divisions updates within the PAGSA 10-day weather forecast Excel files since it aims to use and display raw, un-altered 10-day weather forecast data \"as-is\" from PAGASA, including provinces and municipality names.\nHowever, there are ways to update or change the region in which a province belongs,¬†provided its name is present in the PAGASA 10-day Excel file. Refer to the¬†Updating Regional Provinces¬†section to know more about this method.\nDrastic updates to the region/province/municipalities naming convention or regional/provincial grouping that will thoroughly transform the original PAGASA 10-day weather forecast Excel file contents will require customization of forked ACAP¬†backend¬†or¬†frontend¬†codes and¬†NPM scripts¬†that facilitate 10-day weather forecast updating and seasonal weather forecast uploading to accommodate custom naming or grouping needs.Refer to the Intensive Province/Municipalities Customizations section for more information about this approach.\nIt is not yet thoroughly tested if the regional province lists generated by ACAP's npm run pagasa:municipalities script are updated (synced with the latest PSCG administrative divisions) for ALL regions, except Region 5.The pagasa:municipalities NPM script, which uses the ph-municipalities library's npm run list:region CLI script under the hood uses a static-defined region-to-province mapping file updated on 2024 regarding the available PAGASA Seasonal Forecast- Rainfall Analysis Table.\nIt is also subject to possible outdated region/province/municipality naming content mentioned in the Regional Provinces / Municipalities Inconsistency section.\nRefer to the Updating Regional Provinces section for more troubleshooting information if this script generates regional province lists with missing or extra provinces.\nSometimes, ACAP users or developers may notice several greyed out (disabled) municipalities listed from the dropdown menus in the Cropping Calendar, 10-day weather forecast, or crop recommendations pages.Inconsistent (or missing) municipality names between cropping calendars and the PAGASA 10-day weather forecast, which ACAP considers its \"official\" source of provinces and municipality listing, often causes municipalities to be disabled or greyed out.\nACAP tracks inconsistent-named municipalities between these two (2) sources to promote consistent municipality naming conventions on every successful upload of cropping calendars or run of the¬†npm run cron:tenday¬†script, flagging those which it finds inconsistent.Since ACAP officially uses the PAGASA 10-day weather forecast municipality names, it will not find missing (or misspelled) municipality names in the cropping calendar when determining a selected municipality's crop stage(s) during recommendations generation.\nTo enable the greyed-out municipalities, upload cropping calendars that follow the PAGASA 10-day weather forecast municipality names and cropping calendar Excel format. Inconsistent-named municipalities are available for viewing in the development and production¬†Firestore document¬†for reference:\n/constant_data/diffs\nAlso include municipalities with \"blank\" rows in the Excel cropping calendars if these do not have a commodity. The \"blank\" rows indicate \"no available\" commodity data for these municipalities.","regional-provinces--municipalities-inconsistency#Regional Provinces / Municipalities Inconsistency":"While ACAP Bicol (Region 5) or other regions generally may sync well with its provinces and municipalities listed from the PAGASA 10-day weather forecast Excel data source, several factors may affect its consistency in the long run.\nUpdates in the Philippine geopolitical or administrative divisions in the future (usually mandated by the Philippine Standard Geographic Code (PSGC)) may take some time to reflect on the contents and naming convention within the¬†PAGASA 10-day weather forecast Excel¬†files or¬†Seasonal Forecast - Rainfall Analysis Table.\nIt is not yet thoroughly tested if ALL regions, provinces, and municipality names from¬†PAGASA's 10-day weather forecast Excel files (provinces and municipalities) and their Seasonal Weather Forecast - Rainfall Analysis table (regions and provinces) are up to date with the latest Philippine administrative divisions.","updating-regional-provinces#Updating Regional Provinces":"This simple region-province grouping method assigns the PAGASA 10-day Excel files' provinces (and their associated municipalities) to a region without transforming or altering the original province/municipalities naming contents of the 10-day Excel files.\nIt requires target province(s) defined in the PAGASA 10-day Excel file to work.","confirm-target-provinces#Confirm target provinces":"Download and open a PAGASA 10-day weather forecast Excel file from the PAGASA 10-Day Climate Forecast web page.\nFind the province(s) in the downloaded Excel file to add to your region.\nThese province(s) may belong to other regions generated by the¬†npm run pagasa:municipalities¬†script, or they may be missing from the list but exist in the 10-day Excel files.","add-province-to-a-region#Add province to a region":"Add new provinces(s) to a region's list of provinces from province names confirmed on step #1. For example to add the \"Isabela\" province to ACAP Bicol's list of provinces, add \"Isabela\" to the server's PROVINCES variable in the .env file.\nPROVINCES=Albay,Camarines Norte,Camarines Sur,Catanduanes,Masbate,Sorsogon,Isabela\nPROVINCES_ARCHIVE...","remove-a-province#Remove a province":"Similarly to remove a province from a region, remove its text string from the PROVINCES (or PROVINCES_ARCHIVE) server environment variables.","sync-new-provinces#Sync new provinces":"Run the script after adding or removing a province from a region to update ACAP's list of provinces and municipalities.\nnpm run cron:tenday","intensive-provincemunicipalities-customizations#Intensive Province/Municipalities Customizations":"For intensive naming and grouping transformation beyond the simple method covered in the Updating Regional Provinces section, developers can start checking the /server/src/scripts/cron/update_tenday_weather \"group\" of scripts, possibly extending and overriding its /classes/exceladapter/index.js class. This class extends the ph-municipalities library's ExcelFile class for managing the PAGASA 10-day Excel provinces/municipality lists.The ExcelFile class has available class methods, functions, and constructors dedicated and tested to parsing provinces/municipality lists from a PAGASA 10-day weather forecast Excel file, which developers can override and extend within ACAP's existing class scripts to customize region/province/municipality grouping and naming processing.Some parts of the front end may also need updating depending on the level of customization required.\nThis method will¬†alter¬†the original (province and municipalities) naming convention of a PAGASA 10-day weather forecast Excel file. Consult and deliberate first if this is a requirement before proceeding.Indicate notices and messages in the public ACAP front end about these changes to the PAGASA 10-day provinces and municipalities naming and grouping for transparency.","references#References":"This page is related to the Server Setup - Initialize provinces and municipalities section."}},"/articles/security-bestpractices":{"title":"üîê ACAP Developer Security Best Practices Checklist","data":{"":"This checklist, reflecting the needs of the Security section and the ACAP Professional Mindset on Security, enumerates the desirable traits and mindsets of programmers, especially for code maintainers or main/primary ACAP lead developers handling ACAP development.‚úÖ Use this checklist as a guideline along with the Security expectations during planning, code reviews, or when designing features that handle user input, authentication, or database operations.","1-mindset-and-responsibility#1. Mindset and Responsibility":"I prioritize user safety and data protection over rapid feature delivery.\nI integrate security considerations in every development phase‚Äîfrom design to deployment.\nI recognize that security is a shared team responsibility, not a post-incident task.","2-firestore--backend-practices#2. Firestore & Backend Practices":"I avoid writing to Firestore directly from the front-end when the data is sensitive or requires validation.\nI implement strong Firestore security rules that match the expected schema and use strict access controls.\nI validate all input server-side, even if it‚Äôs also validated on the front-end.","3-input-handling-and-content-security#3. Input Handling and Content Security":"I sanitize WYSIWYG or HTML-formatted input to prevent XSS or unsafe content injection.\nI use established libraries and sanitization methods instead of building ad-hoc solutions for HTML or user input.\nI escape user-generated content correctly in all PDFs, emails, and rendered UI components.","4-data-structure-integrity#4. Data Structure Integrity":"I enforce tight schema validation to prevent Firestore document pollution (uncontrolled key-value growth).\nI use Firebase Cloud Functions or middle-layer APIs to validate and shape incoming data before writing to the database.\nI regularly monitor for unexpected document structures or recursive collections.","5-security-reports-and-technical-debt#5. Security Reports and Technical Debt":"I take security concerns seriously, especially those that are clearly reproducible or reported by team members.\nI do not delay security fixes unless justified with clear documentation and risk mitigation steps.\nI log and track known vulnerabilities as actionable backlog items, not as \"someday\" issues.","6-team-collaboration-and-growth#6. Team Collaboration and Growth":"I am open to feedback and security advice from peers, even if it challenges my current approach.\nI communicate blockers early if I need help on a security implementation.\nI actively share security learnings with the rest of the team (e.g., via code reviews or internal notes)."}},"/changelog":{"title":"ACAP Change Log","data":{"":"This page summarizes the features and enhancements of major ACAP versions, extensions, and their programming-development timelines.","glossary-of-terms#Glossary of Terms":"ACAP 1.0 serves as the base model of the Agro-Climatic Advisory Portal (ACAP). Initially made for the Bicol region, it provides dynamic features setup support for other regional provinces. It served as the active ACAP version until ACAP 2.0.\nACAP 2.0 and beyond is an extension of the Agro-Climatic Advisory Portal (ACAP), a Climate Information System, expanding, enhancing, and building upon the initial ACAP 1.0 version.\nACAP 2.0 builds upon ACAP 1.0 rather than replacing it. It enhances and expands the original system while maintaining its core foundation.\nAs of July 2024, ACAP 2.0, which includes new features and upgrades, is the latest version of ACAP and will be referred to simply as \"ACAP\" until further notice.","version-2-acap-20#Version 2 (ACAP 2.0)":"June 2024 - December 2024Versions from 2.0+ highlight improvements and newly added features, expanding and enhancing the initial ACAP version.\nACAP 2.0 is the latest ACAP version. Its latest stable version is Release/Tag version , dev branch @ accessible in the acap-v2 code repository.\nVersion 2.0 and later versions may have new requirements that will thrive on new development approaches loosely tied to the recommended¬†Security¬†and¬†Server¬†guidelines of¬†ACAP 1.0, requiring thorough testing and validation.\nFlexible Firestore Database Use: ACAP version 2.0+ adopted a more flexible approach for handling data management, facilitating faster feature development by performing WRITE operations to the database directly from the web front end coupled with more lenient Firestore database Rules. However, this shift also introduced the potential for data to enter the database without the usual front-end controls through the Firestore REST APIs. While this was not an issue in Version 1.0, it emerged as part of the effort to enhance development speed and feature delivery starting with Version 2.0.\nCross-Site Scripting (XSS) Vulnerability in Crop Recommendations: Related to item 1, the new process for editing WYSIWYG HTML-form crop recommendations input may allow unsafe or inaccurate content due to limited validation through the Firestore REST APIs. Risks associated with this were recognized early in the process, but the focus on delivering core features led to a delay in integrating security measures.\nA YouTube video detailing steps for exploiting XSS vulnerabilities in the ACAP 2.0 Crop Recommendations at https://www.youtube.com/watch?v=b9UZ6_OCTaY has been set to private permissions to limit exposure. This video is a resource for understanding the security challenges associated with these vulnerabilities and ACAP, which occurred starting on ACAP 2.0 due to new development approaches and priorities.For ACAP Maintainers or developers interested in exploring the content, please contact the current active ACAP Maintainer(s) for an invitation to access the video. Engaging with this material can provide insights into the security considerations that have been acknowledged and inform future enhancements to the system's security measures.\nCrop recommendations data integrity: Ensuring that data presentations in PDF bulletins remain unaltered, trustworthy, and accurate is crucial for users and future developers. This priority stems from the concerns identified in items 1 and 2.\nFirestore database pollution: Also related to item 1, the new \"Support Services\" data with insufficient validation, if pushed through the Firestore REST APIs, can potentially allow writing unlimited key-value pairs with unlimited text or Object content length in Firestore Documents or creating Collections/Documents recursively outside the developer's intended schema or structure. If left unchecked, this can speed up the consumption of the Firebase standard plan quota (or drive up the billing if subscribed to the Firebase Blaze plan) in the long run.\nThese issues, raised during the early 2.0 development phase (June 2024), have been communicated to the new main ACAP code Maintainer, who is also the new primary developer/programmer leading the creation and enhancement of new features for Version 2.0. The new code Maintainer has made thoughtful decisions for balancing development speed with feature delivery, reflecting their understanding of the project's scope and the perceived security needs. They are open to addressing these issues as time and priorities allow within the ACAP project timeline.\nRelated topic: Security Concerns","added#Added":"Integration of climate risk trigger in public/admin crop recommendations and bulletin PDF generation\nSupport for multiple crops (cropping calendar and crop recommendations)\nSupport new multiple recommendations/cropping calendar Excel files with new formats and structure.\nAdmin Pages\nCropping Calendar Excel file uploader\nCrop Recommendations Excel file uploader\nManage Recommendations\nView the uploaded recommendations list\nView an uploaded recommendation\nEdit an uploaded recommendation\nPhonebook: tag a contact to a province/municipality\nUse of tropical cyclone wind signals as a trigger for generating special weather recommendations\nAllow the creation of \"general\" special weather recommendations\nOptional search engine optimization (SEO) settings with Google Search Console\nREST APIs (NodeJS)\nNew endpoints for processing cropping calendar and recommendations Excel file uploads\nMigration of the ACAP-RCMAS REST APIs from the (forked) mirror environment with optional activation and deployment\n(More \"ACAP 2.1\" feature update details to follow, starting from the dev branch @commit 95a97cd. In the meantime, see the link for more information.)","changed#Changed":"Public/admin seasonal recommendations and bulletin PDF generation\nRemoval of the single-month selection trigger for determining the crop stage/s\nRemoval of the rainfall condition trigger\nPublic/admin 10-day recommendations and bulletin PDF generation\nRemoval of the single-date selection trigger within the active PAGASA 10-day date range for determining the crop stage/s\nDeprecation of the data uploaders group of Node Package Manager (NPM) scripts [1], [2] in favor of cropping calendar/recommendations Excel file upload through the UI [3], [4]\nAllow creating seasonal bulletin PDFs with more than one (1) page.\nText blast recipients by province/municipality instead of individual selection","fixed#Fixed":"Various bug fixes and minor updates with summary in the acap-v2 Releases page for more information.","version-1-acap-10#Version 1 (ACAP 1.0)":"ACAP 1.0's last stable version is Release/Tag version v9.5.6, accessible in the climate-services-webportal-v1 and acap-v2 code repositories.\nVersion 1.0 marks the initial ACAP Bicol release used as a base model and template for subsequent developer training and sharing with other regions in the succeeding years starting on July 2023.Developed with a Security-first approach, ACAP 1.0 especially notes common Firestore security pitfalls and keeps a watchful eye on Cross-Site Scripting (XSS) attacks since it uses What-You-See-Is-What-You-Get (WYSIWYG) HTML input for crop recommendations and PDF generation.It has the following features, strictly following and is tested compatible with the recommended¬†Security¬†and Server¬†guidelines:","added-1#Added":"March - December 2022\nLogin and User Authentication\nUser (Admin) Accounts Management\nPDF Bulletins Generator\nGenerated bulletins match the given JPEG layout, and all content fits on one (1) page\nSite Search\nPublic Pages\nHome Page\nACAP Services Page (Weather Services)\n10-Day Weather Forecast Summary\nSeasonal Weather Forecast Summary\nSpecial Weather Forecast Summary\nCropping Calendar: support for one (1) crop (Rice)\nCrop Recommendations Generator\nSeasonal Climate Outlook and Advisory Recommendations (using month, crop stages, and rainfall conditions as triggers)\n10-Day Farm Weather Outlook and Advisory Recommendations (using current date and crop stage/s as triggers)\nPDF Bulletins Downloads\nAdmin Pages\nCrop Recommendations Management\nRegional Seasonal Climate Outlook and Advisory PDF Bulletins and Reports Creator\n10-Day Farm Outlook and Weather Advisory PDF Bulletins and Reports Creator\nSpecial Weather Forecast PDF Bulletins and Reports Creator\nView created reports/bulletins list\nView a created report/bulletin\nSMS Management\nPhonebook\nSend SMS\nACAP Settings\nWeather Forecast Data Management\nPAGASA seasonal weather forecast Excel file uploader\nManual weather systems input editor\n10-Day Weather Forecast Data Management\nPAGASA 10-Day weather forecast Excel files uploader\nManual moon phases input editor\nCyclone Typhoon Advisory Data Management\nManual trigger of syncing the PAGASA Severe Tropical Cyclone web page data\nManual wind speed list and affected municipalities editor\nUser Profile Management\nCloud deployment setup to¬†development¬†and¬†production¬†environments using GitHub Actions\nAutomatic deployment to Heroku/Render (backend) and Firebase Hosting/GitHub Pages (frontend)\nDocker setup for development and Render deployment\nREST API Endpoints\nA set of secure and authenticated REST API endpoints for allowing signed-in admins to mutate ACAP data over HTTPS\nProcesses the seasonal/10-day weather forecast Excel file uploads\nCron Jobs (NPM scripts) for Automatic Weather Forecast Data Syncing to the ACAP Database\nDaily 10-Day Weather Forecast Excel Files from PAGASA data syncing\nWeekly El Nino/La Nina PAGASA web page contents syncing\nRegular daily syncing of PAGASA's Severe Tropical Cyclone Bulletin web page\nData Processing and Upload Scripts\nNPM scripts for uploading cropping calendar data (CSV file) and crop recommendations (Excel file) to the database\nNPM scripts for seeding the Firestore database with default data\nSoftware development planning documentation (available at link).\nJune 2023 onwards","changed-1#Changed":"Used .env variables to manage region-specific static text in the front end, ensuring the base model of the application can be easily adapted for multiple regions with different text content requirements, allowing easier regional static text replacement.\nUse¬†nda¬†values for null/empty seasonal weather forecast data in the backend and front end, borrowed from the ongoing ACAP-RCMAS API development.","fixed-1#Fixed":"Various bug fixes and minor updates with summary in the climate-services-webportal-v1 (ACAP 1.0 repository) Releases page for more information.\nAll ACAP 1.0 features, updates, and follow-up fixes were carried over and inherited by ACAP 2.0."}},"/checklist":{"title":"Success Checklist","data":{"":"(docs for this section is under construction)Visit this link for more information:\r\nhttps://acaptutorials.github.io/assets-cms/posts/post/?id=83Nc7KofhEU91LJOOtQd"}},"/directories":{"title":"Project Folder Structure","data":{"":"The project repository is a monorepo, with frontend code in the¬†client¬†directory and the backend code in the¬†server¬†directory.\nOther directories within the monorepo include:\ndocs - Contains the latest software development project planning documentation\nscripts - Has bash scripts for various tasks\n.github - Contains GitHub Actions workflows .yml files for deployment to the development and production environments, and for running certain NPM scripts as cron jobs in GitHub Actions Scheduled Workflows.\nCode repository directory structure"}},"/directories/server":{"title":"Server","data":{"":"The¬†server¬†directory contains backend JavaScript (NodeJS/Express) codes for running and managing ACAP's REST APIs.ACAP promotes using REST APIs running on the backend to securely perform mutative \"WRITE\" operations in the Firestore database to allow the creation of more robust server-side input validation scripts for simple to complex input data than relying alone on limited Firestore Rules for access checks and data validation.Maintaining a separate backend for securely performing database WRITE operations also syncs with ACAP's requirements to host its frontend UI in GitHub Pages while having access to a secure, remote backend protected by established¬†Security¬†guidelines and adhering to best practices in enforcing web security to maintain sensitive data protection and integrity.\nWhile using the Firestore WEB APIs \"directly\" in the UI instead of going through the Node backend is also an alternate option, developers should be aware of possible security attack vectors that could open up and how to counter them by having a thorough understanding of how the Firebase Authentication, Firebase Custom Claims and Firestore Rules work in sync to keep sensitive user information safe and secure.\nOne of the key things to note here is that using the¬†serverless Firestore WEB APIs¬†to manage data¬†\"directly\"¬†in the Firestore database through the frontend UI with client-side validation logic, where we install its JavaScript APIs, also enables the¬†Firestore REST APIs¬†along with it, which is accessible on other clients, such as a browser console, or Postman, outside the¬†\"safety\"¬†confines of the frontend UI.Knowing that there are two (2) points of data entry to anticipate and the nature of input data should enable developers to make informed decisions about when to use the¬†Firestore WEB APIs¬†(preferably with fool-proof Firestore Rules) directly or if they need to delegate operations in a more secure environment, such as the Node backend server.","files#Files":".env - Dotenv: NodeJS library that loads configuration files from a .env file\n.env.example - example keys and values to put in the server .env file\nDockerfile.acap - multi-stage build Dockerfile definition for running the server on localhost development with livereload using the nodemon library, or built to run for production deployment without livereload\nDockerfile - Used for running the server production deployment on Render\npackage.json / package-lock.json - Contains definitions of the server's NodeJS dependency libraries\n/src/index.js - server program entry point","folders#Folders":"","api#/api":"Contains the index.js file that converts the stand-alone Express app into a single serverless function format recognized by Vercel.\nThis option only becomes available if deployment to Vercel is activated.","express-server-folder#Express server (Folder)":"","middleware#/middleware":"contains scripts that handles Cross-Origin Requests (CORS), router-level data validation and user authentication","controllersindexjs#/controllers/index.js":"contains routing scripts that associates URLs with controller actions","controllers#/controllers":"contains scripts that handles requests, mapping them to target models (classes) and returns success or error responses\nThese sripts, along with the /middleware and /models make up the REST APIs.","models-classes#/models (classes)":"provides methods, organized into categories (classes) for interacting with the database","scripts-folder#/scripts (Folder)":"The scripts directory contains a large collection of Node Package Manager (NPM) scripts used for data processing, uploading and cleanup functions. More information about these scripts are available in the /server/README.md file's Available Scripts - server section.","scriptscron#/scripts/cron":"contains NPM scripts that run as cron jobs in GitHub Actions Scheduled Workflows","scriptsdata#/scripts/data":"contains sample data files in JSON, CSV and EXCEL formats for reference on established data structures and formatting","scriptsseeders#/scripts/seeders":"contains NPM scripts for initializing the Firestore database with default data","scriptsuploaders#/scripts/uploaders":"contains NPM scripts for facilitating raw data file uploads to the Firestore database","scriptsgenerate-docs#/scripts/generate-docs":"contains scripts for generating ACAP's REST API documentation","scriptstools#/scripts/tools":"contains functions for archiving and deleting old PAGASA weather forecast data","utils-folder#/utils (Folder)":"contains various utility helper functions i.e., for date, processing strings, and others","utilspdf#/utils/pdf":"contains scripts that manages the bulletin PDF layouts for seasonal, 10-day and special bulletins","file-tree#File Tree":"This tree shows only the relevant server files and directories."}},"/directories/client":{"title":"Client","data":{"":"The client directory contains codes and configurations/settings for the (React) NextJS v13 + Material UI v5 front end and Firebase. The folder tree displays the relevant files and folders.The NextJS frontend uses the pages router since this is suitable for generating static pages to host on GitHub Pages. It uses the \"container component\" as a dominant pattern, also known as \"component and presentational\" components, for distinguishing between logic (container) and UI (component).\nThis documentation only contains information about relevant files and directories within the client directory. For more information about NextJS-specific files and configurations (such as the next.config.js, _app.js, or document.js files), please head over to the NextJS documentation for Pages Router.\nDevelopers should take care not to \"bake\" or \"build\" sensitive data and information into the frontend build during the NextJS static build time with \"next export\" as part of Security - Sensitive Data Management.","files#Files":".env.example - example keys and values to put in the .env file\n.firebaserc - Firebase configuration file\nfirebase.json - Firebase configuration file\nfirestore.rules - Firestore Rules definitions to publish in a Firebase project's Firestore Rules settings\nstorage.rules - Firebase Storage Rules definitions to publish in a Firebase project's Storage settings\nDockerfile.acap - multi-stage build Dockerfile definition for running the client on localhost development or as \"built\" static files for production deployment running on nginx.\npackage.json / package-lock.json - Contains definitions of the client's NodeJS dependency libraries","folders#Folders":"","pages#/pages":"Components here serves as the \"container\" components in the container-component pattern, mostly component logic\nex: \"pages/admin\", \"pages/admin/reports\",\r\n\"pages/bulletins\", \"pages/home\"","components#/components":"Components defined here serves as the \"UI\" counterpart of each \"page\" in the container components\nThey can contain nested UI components\nex: \"components/admin\", \"components/admin/reports\",\r\ncomponents/bulletins\", \"components/home\"","componentscommonui#/components/common/ui":"Common UI used everywhere\nex: loading spinners, modal, snackbar, skeleton loaders, fileuploader","componentslayout#/components/layout":"UI for massive page-wide layouting","componentsentities#/components/entities":"(main) UI with processing functions\nex: login, searchbar, auth hoc","domain#/domain":"UI subcomponents of main UI/features stored in the /components or /pages directory","srchooks#/src/hooks":"Custom hooks used for main objects","srcservices#/src/services":"Firebase API calls for main objects\nex: reports, bulletins, provinces, atbp","srcstore#/src/store":"Redux (toolkit) stores and slices\nUsed for managing and tracking heavy-weight main objects data\nConvenient for passing data across deeply-nested React components\nex: reports, recommendations, municipalities","file-tree#File Tree":""}},"/":{"title":"Welcome to ACAP Tutorials üè°","data":{"agro-climatic-advisory-portal-acap-a-climate-information-system#Agro-Climatic Advisory Portal (ACAP), a Climate Information System":"This site offers a more organized and structured approach to documenting the software development approaches for the Agro-Climatic Advisory Portal (ACAP), initially released as ACAP 1.0 (ACAP Bicol) at the end of 2022 and enhanced to version 2.0 in 2024.\nThe Agro-Climatic Advisory Portal (ACAP), a Climate Information Services web application (CIS) co-developed by the University of the Philippines Los Banos Foundation, Inc. (UPLBFI) and the Alliance of Bioversity International and CIAT (Alliance) with the Department of Agriculture (DA) and the Regional Field Office 5 (RFO 5) is a digital platform that serves as a centralized hub for the development of Climate Information Services (CIS) in the Bicol Region. It contains relevant weather and climate information to use with tailored advisories and crop recommendations.\nThis documentation website is a revamped version of the previous documentation websites, offering informative new sections such as Post-Installation, containing after-initial installation notes and checklists, more details on Security guidelines, and other development-related details.\nThe shared private ACAP code repositories, including all raw source codes, files, and documents otherwise stated, are proprietary property of the¬†Department of Agriculture (DA)¬†and the¬†DA Regional Field Office 5. As such, kindly protect confidentiality, ensuring shared copies obtained after gaining access to the parent repository or private copies/forks from the code Maintainers remain private in GitHub or any other public platform.","previous-tutorials-websites#Previous Tutorials Websites":"ACAP 2.0 (latest ACAP Bicol) \nhttps://acaptutorials.github.io/assets-cms/posts/post/?id=cFgd8nBjkdZ6gNNkktGEACAP 1.0 \nhttps://acaptutorials.github.io/assets-cms/posts/post/?id=Teo2m6os7LZtsEi0nGWw","content-updates#Content Updates":"The ACAP Development website contents are a continuous work in progress.Given time and availability, code Maintainers (old and new) with access to the parent ACAP code repositories and who are acquainted or actively involved with its latest developments and updates will try to update this documentation website as frequently as possible to sync with the latest updates in the codebase.","tutorials-maintainers#Tutorials Maintainers":"Maintainers with Collaborator access to this documentation code repository are:\n@dilapitan\n@acaptutorials (@ciatph)"}},"/installation":{"title":"Installation and Setup","data":{"introduction#Introduction":"This series of tutorials describes how to run ACAP-Bicol (ACAP version 2.0) on localhost, using values for a new Region, using the initial ACAP 2.0 release version¬†v10.1.0-alpha.1, dev branch @commit¬†c92235b.Fork the repository to receive the latest updates and bug fixes. Configure the following components to run ACAP for your PC or laptop for localhost development.\nTo make the most of these tutorials, please create Firebase projects first as instructed from the 03 Create Firebase Projects video tutorial before proceeding.\nacap-v2 has updated source codes at Release tag  dev branch @commit .","post-installation#Post-Installation":"After installing ACAP, additional setup is required, including configuring the web map on the Home Page, updating static PDF content, and replacing the OpenGraph thumbnails.For detailed instructions on these steps, refer to the Post-Installation section after completing the Installation process.","repository-syncing-options#Repository Syncing Options":"If you are working on a forked repository behind several updates from the parent acap-v2 repository, you can get the latest updates or bug fixes using any of the options:\n\"Sync\" your forked repository's dev branch to the parent repository's dev branch.\nTake care not to \"discard\" your commits.\nCreate a Pull Request (PR) from the \"parent\" repository's (acap-v2) - dev branch to your \"forked\" repository's dev branch, then merge/resolve conflicts.\nPick only the target updates/fixes, then commit them to your fork.\nProject Maintainers occasionally update the parent repository acap-v2 for maintenance, bug fixes, and minor/optional updates. Sometimes, massive new feature updates.Of the three (3) repository syncing options mentioned, doing the first or second options ensures up-to-date sync with the latest updates and bug fixes.\nAll updates and fixes should be from the¬†(parent) acap-v2¬†repository's (default)¬†dev¬†branch. Updates to the acap-v2 dev branch expect to have been tested and ensured compatibility by the main ACAP code Maintainer(s) before committing new updates and fixes to the¬†dev¬†branch.","questions-and-inquiries#Questions and Inquiries":"Concerns, questions, and inquiries with ACAP go through the mode of communication channel elected within ACAP (the ACAP FB Group Messenger).\nThis communication channel is reserved only for the current \"active\" and \"official\" ACAP members group.\nAlternatively, developers may create tickets (GitHub Issues) within the (parent) acap-v2 repository to describe their concerns in more detail. This page also contains code-related information about past inquiries and bug fixes that may be useful to other regions.\nThe main ACAP code Maintainers (\"active\" and \"inactive\") may respond to these tickets within their available time."}},"/installation/accounts":{"title":"E. Accounts","data":{"introduction#Introduction":"Create ACAP admin accounts to use for testing. Developers signed in as ACAP superadmins may create other accounts later for Regional Field Officers (RFOs) by signing in to ACAP's superadmin dashboard. The following methods require a successfully running ACAP client + server app, carrying on from the¬†Integration section.","login-as-superadmin#Login as Superadmin":"Login as a superadmin to create an admin account. Open a new browser tab to:\nhttp://localhost:3000/superadmin\nLogin using the superadmin login credentials:\nusername: superadmin@gmail.com\r\np/w: -\nUse the random password from the¬†Server Setup¬†step. If you didn't change it during the installation setup, see the default acap superadmin password in this file for reference:server/src/scripts/seeders/00_superadmin/index.js","create-a-new-admin-account#Create a new Admin account":"Press the CREATE USER button.\nFollow the UI input prompts for creating a new Admin account.","sign-in-using-the-admin-account#Sign-in using the Admin account":"Sign-out from the superadmin account.\nOpen the browser to:\nhttp://localhost:3000/admin\nUse the Admin account created in step #2 to sign-in"}},"/installation/client-setup":{"title":"C. Client Setup","data":{"":"Please read the client's README file in /client/README.md as reference for more information on the client environment variables.\nThe 09 Client setup for localhost development video tutorial shows how to initialize the server for localhost development in more detail.","setup-environment-variables#Setup environment variables":"Update the client .env file, copying the keys and values from the .env.example file. You can leave the default values for now, but be sure to update the following with new values:\nThe client REGION_NAME should be similar with the server REGION_NAME value.\nREGION_NAME\nDEFAULT_PROVINCE\nDEFAULT_MUNICIPALITY // --> Any municipality under the DEFAULT_PROVINCE also among the AMIA Villages\nNEXT_PUBLIC_FIREBASE_WEB_API_KEY\nNEXT_PUBLIC_FIREBASE_WEB_AUTHDOMAIN\nNEXT_PUBLIC_FIREBASE_WEB_PROJECT_ID\nNEXT_PUBLIC_FIREBASE_WEB_STORAGE_BUCKET\nNEXT_PUBLIC_FIREBASE_WEB_MESSAGING_SENDER_ID\nNEXT_PUBLIC_FIREBASE_WEB_APP_ID\nNEXT_PUBLIC_FIREBASE_WEB_MEASUREMENT_ID\nREGION_CODE\nREGION_LAT_AND_LNG\nREGIONAL_FIELD_OFFICE\nREGION_URL\nCROPPING_CALENDAR_RICE_EXCEL_FILE\nCROPPING_CALENDAR_CORN_EXCEL_FILE\nRECOMMENDATIONS_RICE_EXCEL_FILE\nRECOMMENDATIONS_CORN_EXCEL_FILE","copy-template-files#Copy template files":"Create a directory named \"files\" under the /client/public directory: \"/client/public/files\".\nCopy the Excel files from the \"/server/src/scripts/data/dataset_v2.0\" directory to the \"files\" directory\nCopy the the /server/src/scripts/data/pagasa_seasonal_v2.xlsx Excel file to the \"files\" directory\nUse the \"files\" directory and its contents on localhost development but not push it to the repository.\nFollow the steps under the Cropping Calendar and Crop Recommendations Post-Installation steps to change the Excel templates uploaded during live deployment.","update-environment-variables-after-deployment#Update environment variables after deployment":"Certain client environment variables, such as URLs (i.e., BASE_URL_PROD) will become available after deployment. Update the rest of the .env variables later after:\nSetting-up and deploying the (development and production) servers respectively to their own Render.com cloud services\nDeploying the development website to Firebase Hosting\nDeploying the production website to GitHub Pages"}},"/installation/conclusion":{"title":"F. Conclusion","data":{"":"ACAP-Bicol will display values for the region, provinces, and municipalities defined in the client and server's .env file. Browse through the running (localhost) ACAP website pages and check if the lists of new provinces and municipalities are displaying.Visit the ACAP 1.0 Duplication Checklist post and check the following sections to confirm the localhost website pages. (Some items in the checklist are not yet applicable until relevant data are provided and updated).\nPublic Pages\nSuperadmin Pages\nAdmin Crop Recommendation Pages\nAdmin SMS Management Pages\nAdmin Profile\nAdmin ACAP Settings\nSecurity\nCongratulations! Now, you are ready to proceed with the Post-Installation Setup."}},"/installation/firebase":{"title":"A. Firebase Initialization","data":{"checkout-the-latest-acap-20-source-codes#Checkout the latest ACAP 2.0 source codes":"Fork the latest repository to get the latest updates and bug fixes if you haven't already done so.Read about the latest repository version and forking notes in the Installation and Setup section for more information.\nacap-v2 has updated source codes at Release tag  dev branch @commit .","create-a-new-firebase-project-for-the-new-region#Create a new Firebase Project for the new Region":"Create a new Firebase project for the development environment of the new region. Follow the steps in the 03 Create Firebase Projects video tutorial for more information.","initialize-the-firebase-storage#Initialize the Firebase Storage":"Copy the contents of the /client/storage.rules file to the Storage Rules tab\nSet the Firebase Storage's Cross Origin Resource Sharing (CORS) permissions using the Google Cloud Shell.\nGo to your Firebase project‚Äôs google cloud console on https://console.cloud.google.com/home.\nActivate the cloud shell by clicking the Activate Cloud Shell button on the upper right menu.\nCreate a cors.json file on the cloud shell using any of it's cloud-based text editors. Copy and paste the following contents to the JSON file:\n[\n  {\n      \"origin\": [\"*\"],\n      \"method\": [\"GET\"],\n      \"maxAgeSeconds\": 3600\n    }\n]\nRun the command on cloud shell. Replace BUCKET_NAME with your Firebase Storage bucket name.\ngsutil cors set cors.json gs://<FIREBASE_PROJECT_ID>.appspot.com\nView the current cors configuration of a bucket:\ngsutil cors get gs://<FIREBASE_PROJECT_ID>.appspot.com","initialize-the-firestore-database#Initialize the Firestore Database":"Copy the contents of the /client/firestore.rules file to the Firestore Rules tab","initialize-the-firebase-authentication#Initialize the Firebase Authentication":"Enable Email/Password Authentication"}},"/installation/integration":{"title":"D. Integration","data":{"":"This section requires a successful set-up of the Client and Server to proceed.","using-nodejs#Using NodeJS":"Do the following steps to run the client and server apps when using NodeJS for local development.","run-the-client-app#Run the client app":"Navigate to the client app using the commandline then run the script:\ncd client\r\nnpm run dev","run-the-server-app#Run the server app":"Navigate to the server app using the commandline then run the script:\ncd server\r\nnpm run dev","load-the-acap-website#Load the ACAP website":"Open a web browser and navigate to this local site to load the ACAP website on localhost:\nhttp://localhost:3000","using-docker#Using Docker":"ACAP uses Docker to run the production server app in Render using the server Dockerfile. You can use this or the Dockerfile.acap files in the /server directory to run the server app in production mode.\nUsing Docker for local development is optional. Do the following steps when using Docker for localhost development. Navigate to the project's root directory then:","build-images#Build images":"Build the client and server containers for localhost development.\ndocker compose -f docker-compose.dev.yml build","run-containers#Run containers":"Create and start the development client and server containers.\ndocker compose -f docker-compose.dev.yml up","stop-containers#Stop containers":"Stop and remove the development containers, networks, images and volumes\ndocker compose -f docker-compose.dev.yml down","load-the-acap-website-1#Load the ACAP website":"Open a web browser and navigate to this local site to load the ACAP website on localhost:\nhttp://localhost:3000"}},"/installation/server-setup":{"title":"B. Server Setup","data":{"":"Please read the server's README file in /server/README.md as reference for more information on the server environment variables.\nThe 08 Server Setup for Localhost Development video tutorial shows how to initialize the server for localhost development in more detail.","setup-environment-variables#Setup environment variables":"Create a .env file inside the /server directory. Copy the contents of the .env.example file in it.\nReplace the FIREBASE_SERVICE_ACC variable with the Firebase project's private key from it's service account JSON file.\nReplace the FIREBASE_PRIVATE_KEY variable with the FIREBASE_SERVICE_ACC's private_key entry.\nReplace the FIREBASE_STORAGE_BUCKET variable with your Firebase project's storage bucket\nReplace the REGION_NAME variable with a string (no white space) representing the name of your new target region\nThe server REGION_NAME should be similar with the client REGION_NAME value.\nSet AXIOS_SSL_REJECT_INVALID to 0\nIf AXIOS_SSL_REJECT_INVALID does not yet exist, please make sure that your forked repository have the most recent update from the upstream repository.\nThe AXIOS_SSL_REJECT_INVALID variable was added recently in ACAP-Bicol 1.0 v9.3.13 to fix a new bug that fails web scraping PAGASA's tropical cyclone and El Nino / La Nina web pages.\nInitially set CHECK_RANGE_YEAR to 0.\nThis variable validates that the 10-day PAGASA Excel files downloads contain the latest year.\nRunning the npm run seed:all script below will throw an error if this variable set to 1, since the sample local 10-day PAGASA Excel files used for seeding initial data have outdated dates\nSet it back to CHECK_RANGE_YEAR=1 after running the seed:all script.\nSet SPECIAL_CHARACTERS to ‚îú√¢‚î¨‚ñí:√±,√¢:\nThis variable converts the ‚îú√¢‚î¨‚ñí garbled text to √± from municipality names containing the √± character in the PAGASA 10-day weather forecast Excel files.\nAdd other key-value pairs of special characters and their normalized values, delimited by a comma as needed\nRead on this reference for more information about this bug.\nACAP 2.0 introduces several new environment variables. Add the following, while refering to the server's README file in /server/README.md for more information about these variables. Some variables need to be added or excluded in order to enable or disable the ACAP-RCMAS APIs.\nSPECIAL_CHARACTERS\nDEPLOYMENT_PLATFORM=default\nPROVINCES_ARCHIVE - Set its value after running 2. Initialize provinces and municipalities\nACAP_API_KEYS\nIS_RMCAS_API_ACTIVE=0\nARCHIVE_TENDAY_FORECAST=0\nROOT_API_URL\nROOT_API_URL_VERCEL\nCHECK_RANGE_YEAR","initialize-provinces-and-municipalities#Initialize provinces and municipalities":"ACAP refers to the PAGASA Seasonal Forecast - Forecast Rainfall Analysis Table for its regional provinces list, matching the province names with those listed in the PAGASA 10-day Weather Forecast Excel files.ACAP expects province naming from the two (2) data sources to match since both are data products produced by PAGASA.\nRun ACAP's \"pagasa:municipalities\" NPM script to get a list of the PAGASA municipalities and province names.\nFirst, navigate to the server directory from the command line, then run:\nnpm run pagasa:municipalities\nINFO: The \"pagasa:municipalities\" NPM script uses a static-encoded region/province mapping file, manually encoded in 2024 with reference from the PAGASA Seasonal Forecast - Forecast Rainfall Analysis table.\nEnter PAGASA's 10-day Excel file URL when prompted.\nThese files, updated daily around 8:00 AM, are available on https://www.pagasa.dost.gov.ph/climate/climate-prediction/10-day-climate-forecast\nEnter a specific PAGASA's 10-day Excel file URL when prompted:\nhttps://pubfiles.pagasa.dost.gov.ph/pagasaweb/files/climate/tendayweatheroutlook/day1.xlsx\nDouble-check the resulting province names from step #2 with those listed in the latest PAGASA Seasonal Forecast - Forecast Rainfall Analysis table. Take note of new province(s) not included in the generated list, or remove provinces no longer present in the Forecast Rainfall Analysis table.\nThe \"pagasa:municipalities\" NPM script may generate an outdated or incorrect list of provinces of a region depending on several factors.\nVisit the Provinces and Municipalities FAQs or the Regional Provinces / Municipalities Inconsistency sections for more information on why this may happen.\nRefer to the Updating Regional Provinces guide for possible troubleshooting methods if you notice missing provinces or municipalities after running this script.\nReplace the PROVINCES and PROVINCES_ARCHIVE variables with the comma-separated province names of your new target region resulting from steps #2 and #3.\nReplace the DEFAULT_PROVINCE .env variable with any province name from the PROVINCES comma-separated province names.","create-new-superadmin-password#Create new superadmin password":"Open the the file: /server/src/scripts/seeders/00_superadmin/index.js\nAdd a password parameter to the params object. Enter a random password, and remember its value.\nconst params = {\n  ...,\n  displayname: 'Super Admin',\n  account_level: 1,\n  password: 'some_super_secret_password'\n}","seed-default-data#Seed default data":"This script initializes the Firestore database with default values. Navigate to the server folder from the command line and run the NPM script:\nnpm run seed:all\nThis script will create default, mock (empty) values to designated Firestore collections and documents using the defined region and provinces in the .env file, which should be updated later with real values.\nThis script expects to finish without errors. Re-trace, debug and troubleshoot errors, if any will show, before proceeding to the Client Set-up section.","initialize-10-day-weather-forecast#Initialize 10-day weather forecast":"Run this server NPM script to fetch and upload the @latest PAGASA 10-day weather forecast data to the Firestore database. Navigate to the server folder from the command line and run the NPM script:\nnpm run cron:tenday\nThis script may fail to fetch and parse 10-day weather forecast data of several municipalities linked with provinces not available in the 10-day Excel file.Visit the¬†Provinces and Municipalities article for more information if you notice missing 10-day weather forecast data for several provinces and municipalities.","build-the-api-docs-optional#Build the API docs (Optional)":"(Optional) Build ACAP server's REST API documentation website for reference.\nNavigate to the server folder from the command line and run the NPM script:\nnpm run gen:docs\nGo to the /server/src/public/docs folder and click the index.html file to view the generated API documentation.\nThe API documentation website is also available on http://localhost:3001/docs after running the server app."}},"/post-installation":{"title":"Post-Installation","data":{"":"These tutorials contain additional post-installation instructions and guidelines after initially setting up the client and server apps in the Installation section.","-immediate#‚ö° Immediate":"","-optional#‚ú® Optional":"","-during-development#üí° During Development":""}},"/post-installation/acap-rcmas-api":{"title":"ACAP-RCMAS REST APIs","data":{"":"The ACAP-RCMAS REST APIs, aiming to share ACAP's internal PAGASA weather forecast data in a structured, organized format and secure manner to collaborators, are a new addition to ACAP's REST APIs. Merging its feature updates from the forked development repository and environment into the official ACAP Bicol aims to:\nUnify data sources and processes, merging specific updates from the ACAP Bicol's mirror environment to the official ACAP Bicol environment.\nMake the APIs readily available for other regions should the DA request its activation and availability.\nThese APIs, accessible in the /api/weatherforecast and /api/weatherforecast/archives REST API endpoints, provide GET query methods for retrieving seasonal, 10-day, and severe cyclone weather forecasts. Furthermore, its inclusion in ACAP allowed the archiving of historical weather forecast data, also available by query in these API endpoints.These APIs are in their prototype stage, currently intended for use only by the Bicol region for sharing structured and organized weather forecast data with IRRI as part of their collaboration project.\nActivation of the ACAP-RCMAS APIs is made into an optional feature for ACAP 2.0 that can be triggered by supplying certain backend environment variables and GitHub Secrets/Variables to ensure smooth integration with the standardized ACAP 1.0 deployments for other regions, which does not yet require these APIs.\nRegions outside Bicol are encouraged to prevent these APIs and their respective archiving and deletion functions from running and being accessible until further notice by the DA.While ACAP does not yet endorse activating the ACAP-RCMAS REST APIs for other regions, other regions can also start activating and using it earlier.\nTo¬†prevent the ACAP-RCMAS REST API and functions from running, please supply the¬†\"disabled\"¬†values of its server¬†.env¬†file, GitHub Actions Secrets/Variables, and Render Secrets/Variables described in the¬†acap-v2's root and server README files."}},"/post-installation/cropping-calendar":{"title":"Cropping Calendar","data":{"":"ACAP uses crop stage data from¬† cropping calendars, following established formats as input parameters for generating crop recommendations.This section details guides on updating ACAP's cropping calendar(s) for the latest¬†ACAP 2.0¬†version. It also discusses cropping calendar updating methods for the older¬†ACAP 1.0 for backtracking purposes."}},"/post-installation/cropping-calendar/calendar-v1":{"title":"ACAP 1.0 Cropping Calendar","data":{"introduction#Introduction":"This section describes methods for uploading the cropping calendar for the older ACAP 1.0. Its last stable version is Release/Tag version v9.5.6,¬†accessible in the¬†climate-services-webportal-v1 and acap-v2 code repositories.Follow this¬†link to view cropping calendar upload instructions for the latest¬†ACAP 2.0.","data-format#Data Format":"ACAP 1.0 uses a cropping calendar with only one (1) group of crop stages, supporting only one (1) type of crop (Rice). View its raw CSV data file in the /server/src/scripts/data/cropping_calendar_v2.csv file for more information about its contents and data structure.","crop-stage-codes-and-labels#Crop Stage Codes and Labels":"The crop stage codes should match with the crop stage labels defined in the ACAP 1.0 crop recommendations raw Excel file to ensure the correct association of crop stages with target recommendations.\nCrop Stage Code\tCrop Stage Label\tlprep\tPreparation Stage\tplant/trans\tNewly Planted\tveg/repro\tVegetative/Reproductive\tmat\tMaturing","upload-crop-calendar-data#Upload Crop Calendar Data":"ACAP 1.0 uploads its cropping calendar data to the Firestore database using NPM scripts, accessible only to developers.","prepare-cropping-calendar-data#Prepare cropping calendar data":"Prepare the necessary cropping calendar data for a region, following the format from the /server/src/scripts/data/cropping_calendar_v2.csv CSV file.\nTake note of the municipality names, which should sync with the PAGASA 10-day weather forecast naming conventions to ensure smooth data processing.\nPut the CSV file in the /server/src/scripts/uploaders/cropping_calendar directory.","use-a-target-environment#Use a target environment":"Open the server .env file. Update the FIREBASE_SERVICE_ACC and FIREBASE_PRIVATE_KEY keys with the development or production key values.","run-the-npm-script#Run the NPM Script":"This script only works for ACAP 1.0, whose last stable version is¬†v9.5.6. It has no backward compatibility for ACAP 2.0 and later versions and thus may fail to work as expected.\nNavigate to the /server directory from a terminal.\nRun the command, replacing cropping_calendar_v2.csv with the filename of a cropping calendar CSV file placed in the directory specified in the Prepare cropping calendar data step:\nnpm run upload:calendar --localfilename=cropping_calendar_v2.csv\nEnsure running the script from step #3 is completed successfully.","scripts#Scripts":"","crop-calendar-generator#crop-calendar-generator":"External tool that generates random cropping calendar data for the municipalities of a selected region.\nAvailable at link"}},"/post-installation/cropping-calendar/calendar-v2":{"title":"ACAP 2.0 Cropping Calendar","data":{"introduction#Introduction":"This section describes methods for uploading cropping calendars for the latest ACAP 2.0, whose latest stable version is Release/Tag version ,¬†accessible in the¬†acap-v2¬†repository.Follow this¬†link to view cropping calendar upload instructions for the older ACAP 1.0.","data-format#Data Format":"The latest updates for ACAP 2.1, starting with @commit 95a97cd in the acap-v2  dev branch, use a new Cropping Calendar Excel template different from the ones mentioned on this page.\nThese Cropping Calendars are only compatible up to @commit ee49568 in the acap-v2 dev branch.\nKindly chat the ACAP group chat for more information about the new Cropping Calendar Excel file for ACAP 2.1. Alternatively, you may use the temporary workaround until a final update to ACAP's ongoing items becomes available.\nACAP 2.0 uses cropping calendars with two (2) groups/rows of crop stages for each municipality supporting one (1) or more types of crops. View its raw EXCEL data files in the /server/src/scripts/data/dataset_v2.0 directory for more information about its contents and data structure.","crop-stage-codes-and-labels#Crop Stage Codes and Labels":"This section only displays the ACAP 2.0 crop stage codes and labels for the Rice and Corn crops.\nThe crop stage codes should match those defined in the ACAP 2.0 crop recommendations raw Excel files crop stage labels specific to target crops to ensure the correct association of crop stages with target recommendations.\nSupport for Multiple Crops \nDevelopers can add crop stages and labels for other crops, following the crop stages code and label format in the¬†/client/src/utils/constants.js¬†file and by creating cropping calendars similar to the sample cropping calendar Excel files described in the¬†Data Format¬†section as a reference.","rice#Rice":"Crop Stage Code\tCrop Stage Label\tprep\tPreparation Stage\tseed\tSeedling Stage\tplant\tNewly Planted\tvegat\tVegetative (Active Tillering)\tvegpi\tReproductive (Panicle Initiation)\trepro\tReproductive (Flowering)\tmat\tMaturing","corn#Corn":"Crop Stage Code\tCrop Stage Label\tprep\tPreparation Stage\tseed\tSeedling Stage\tvegleaf\tVegetative (Leaf Stages)\tvegtass\tVegetative (Tasseling)\trepro\tReproductive\tmat\tMaturing","upload-crop-calendar-data#Upload Crop Calendar Data":"ACAP 2.0 uploads its cropping calendars using an upload form on the Cropping Calendars page, requiring Admin login.\nThe crop stage codes should match those defined in the ACAP 2.0 crop recommendations raw Excel files crop stage labels specific to target crops to ensure the correct association of crop stages with target recommendations.*Each municipality should have two (2) rows of crop stages each, following the format of the new cropping calendar Excel templates in the /server/src/scripts/data/dataset_v2.0 directory.","prepare-the-frontend--backend#Prepare the frontend / backend":"Update the frontend and backend codes with necessary data for supporting other crops, with data formats described in the Data Format and Crop Stage Codes and Labels section.\nOverwrite and commit the sample cropping calendar Excel template files rice_cropping_calendar.xlsx and corn_cropping_calendar.xlsx in the server directory with the correct regional cropping calendar files to change the default sample Excel templates during live deployment.Also, change the values of the environment variables (CROPPING_CALENDAR_RICE_EXCEL_FILE, CROPPING_CALENDAR_CORN_EXCEL_FILE) associated with its file names in the client .env file and GitHub Secrets if there is a need to use different file names or add new templates.\nNOTE: This step is compatible until @commit¬†95a97cd¬†(latest updates) in the¬†acap-v2 dev¬†branch. However, the default cropping calendar Excel templates inside the repository only work until the previous updates @commit ee49568 (pre-ACAP 2.1). Kindly chat the ACAP group chat for more information about the new Cropping Calendar Excel file format and management for ACAP 2.1 if it's missing in the online documentation.","login-as-admin#Login as Admin":"Login as an ACAP admin, then, navigate to the Cropping Calendar Management page in the /admin/cropping-calendars route.","upload-cropping-calendars#Upload Cropping Calendars":"Upload Cropping Calendar: Select a¬†\"Crop Type\"¬†from the available¬†crops list and select options.\nUpload an Excel file: Press the SEARCH icon.\nBrowse for a cropping calendar that corresponds to the selected¬†Crop Type¬†in¬†step #1.\nPress the UPLOAD button.\nWait for the upload success or fail status response to appear."}},"/post-installation/git-flow":{"title":"Git Flow","data":{"":"This page summarizes the simplified version of Git Flow branching strategy from the ACAP video tutorials when developing new features, bug fixes or tasks.CI/CD using GitHub Actions deploy code updates to the development or production environments on certain triggers (eg., merging PRs to the dev branch or creating new Releases).\n(Optional) Before proceeding, create a GitHub Issue describing the new feature, bug fix or task that you'll develop. This tracks and organizes the details of the incoming updates.","create-a-feature-branch#Create a feature branch":"Create a feature branch branching out from the dev branch\nIf a GitHub Issue describes this feature, name the branch with the GitHub Issue number eg., feat/acaptutorials-12 (Issue #12)\ngit checkout dev\ngit checkout -b feat/acaptutorials-12\n# Using other branch names\n# git checkout -b awesome-update\nThis isolates new work (feature, bug fix, or task) so it doesn't destabilize the shared development branch.","merge-the-feature-branch-back-to-dev#Merge the feature branch back to dev":"Once the feature is complete and reviewed via a Pull Request (PR), it's merged back into dev.\nApproving a PR to the dev branch (or pushing updates directly to the dev branch) triggers a deployment to the development (Firebase Hosting, Render and, Vercel (if available)) environment.\nIt allows testing the feature with other in-progress features in an integrated (development) environment.\nDelete the feature branch afterward to keep the repository clean.","promote-dev-to-master#Promote dev to master":"When the dev branch has accumulated stable, tested features, create a Pull Request (PR) to master\nThe master branch always reflects the code that's safe to release to production.","tag-a-release#Tag a release":"Tag and version a release from the master branch (e.g., v1.0.0).\nThis creates an immutable snapshot of the code that corresponds to a specific release.\nIt also triggers a deployment to the production (GitHub Pages, Render and, Vercel (if available)) environment."}},"/post-installation/google-search":{"title":"SEO with Google Search Console","data":{"":"Google Search Console helps with Search Engine Optimization (SEO), helping websites become discoverable in search engines like Google, Bing or Yahoo Search, along with other factors and best practices for achieving good SEO performance.\nNote however, that Google Search Console alone won't drive up a website's SEO ranking. Visibility and popularity in search engines also depends on other SEO best practices, such as writing semantic, meaningful content on each page and building external links from external sources like social media, among others.\nThis is an optional update for ACAP introduced in its 2.0 version, should developers want to slightly increase their ACAP's rank and visibility in the Google Search results.\nThis requires the latest updates from the acap-v2 repository at release v10.1.0-alpha.6, dev branch commit @e2df7bf or later.","requirements#Requirements":"ACAP website running in its production GitHub Pages i.e.,https://acap-bicol.github.io\nGoogle Account","register-with-google-search-console#Register with Google Search Console":"","login-to-google#Login to Google":"Login to a Google account.","register-site-to-google-search-console#Register Site to Google Search Console":"Navigate to the Google Search Console website registration page.\nSelect the URL prefix option. Enter the root domain name of the ACAP website. For example, https://acap-bicol.github.io.\r\nPress the CONTINUE button.\nDownload the HTML file in the resulting Verify ownership window. For example, the HTML file's name is \"google9e24fb24f7c185b4.html\"","upload-html-verification-file#Upload HTML Verification File":"Put the \"google9e24fb24f7c185b4.html\" file under the /client/config directory.\nCommit and push the file to the forked repository.\nDeploy the ACAP website to the production GitHub Pages website to upload the verification file.\nThe \"google9e24fb24f7c185b4.html\" should become available from the production website's root URL after a successful deploy.\nFor reference, the ACAP-Bicol's google verification file is available at: https://acap-bicol.github.io/google9e24fb24f7c185b4.html","authenticate-the-html-verification-file#Authenticate the HTML Verification File":"Press the AUTHENTICATE button in the Verify ownership window after uploading the HTML verification file in the production website's root URL.\nIn case you have closed the window, search for the registered URL in the upper left \"Search for property\" search bar.\nSteps #1 or #2 should authenticate the HTML verification file, if its successfully uploaded to the website's root directory.","submit-a-sitemap#Submit a Sitemap":"A sitemap.txt file should be available in the ACAP production GitHub Pages website if it was deployed with the latest updates from the acap-v2 repository at release v10.1.0-alpha.6, dev branch commit @e2df7bf or later.\nClick the Sitemaps tab in the Google Search Console dashboard.\nEnter the ACAP's sitemap URL in its input prompt for example:\nhttps://<REGION_N_ACAP>.github.io/sitemap.txt\nSubmit the sitemap.\nWait for several days to up 1 - 2 weeks after a successful submission for the sitemap pages to become indexed and to receive feedback in the Google Search Console dashbboard - Overview, Pages, Performace, and others.","url-inspection#URL Inspection":"While waiting for the pages to become indexed, inspect each URL defined in the sitemap.txt file in the Google Search Console's URL Inspection tab once or several times.","inspect-urls#Inspect URLs":"Press the URL Inspection tab in the left navigation menu.\nEnter a URL from the sitemap.txt file in the upper search bar, i.e.,\nhttps://acap-bicol.github.io/bulletins/\nNote that the URL ends with a forward slash / as defined in the sitemap.txt file.\r\nhttps://acap-bicol.github.io/weather-services/ and not \r\n\"https://acap-bicol.github.io/weather-services\" (without a \"/\")","request-page-indexing#Request Page Indexing":"Press the Request Indexing button in the page logs resulting from the URL Inspection step.\r\nWait until step #1 finishes successfully with an \"Indexing requested\" message.","inspect-all-sitemap-urls#Inspect All Sitemap URLs":"Repeat the Inspect URLs and Request Page Indexing steps for every URL defined in the sitemap.txt file.","debug-and-observe-errors#Debug and Observe Errors":"While waiting, observe and resolve errors that the Google Search Console may display in the dashboard - Pages tab.","resolve-errors#Resolve Errors":"Navigate to the Pages tab and observe page indexing error logs that may appear under the Pages ‚Üí Why pages aren't indexed section. Error logs may look like the screenshot:Inspect and resolve each error log.","confirm-indexed-pages#Confirm Indexed Pages":"After a few days up to several weeks after a successful page indexing, view and confirm the list of indexed pages in the Google Search Console's Pages ‚Üí View data about indexed pages page.Search for your website in Google Search and observe if it will be among the top search results."}},"/post-installation/opengraph":{"title":"Opengraph Settings","data":{"":"OpenGraph is a protocol used by websites to control how their content is displayed when shared on social media platforms and messaging apps.This section contains notes on updating the thumbnail-like images that appears when sharing the ACAP website URLs in social media like Meta and Twitter.\nACAP only display OpenGraph images on its production website hosted at (GitHub Pages) https://acap-bicol.github.io to differentiate between the development and production websites.","opengraph--meta-description#OpenGraph / Meta Description":"Open the /server/src/scripts/data/assets_dev.csv file.\nSelect the row whose filename column is equals to \"og_home\".\nReplace all \"Bicol\" text with the new region name in it's description column.","opengraph-thumbnails#OpenGraph Thumbnails":"","create-new-opengraph-images#Create New OpenGraph Images":"Take note of ACAP's public pages. These are pages which do not require login.\nHome Page - / (index page)\nACAP Services - /weather-services\nCropping Calendar - /cropping-calendar-v2\nSeasonal / 10-Day Recommendations - /agroclimatic-services\nBulletins PDF Download - /bulletins\nSesaonal Bulletins PDF Download - /bulletins/seasonal-outlook\n10-Day Bulletins PDF Download - /bulletins/weather\nSpecial Bulletins PDF Download - /special-weather-forecast\nAdmin Login - /admin/login\nSuperadmin Login - /superadmin/login\nCreate 1200 x 600 pixel picture banners for each public page mentioned in step #1.\n(Optional) For reference, you can use ACAP's OpenGraph Photoshop PSD template to create new OpenGraph images. Press the (left) DOWNLOAD button to download the file.\nA total of ten (10) new thumbnail files should be created, continuing from¬†step #2. Let us use the Region 6 OpenGraph images only¬†as an example to have preview samples of different OpenGraph images for each public page aside from Region 5. Press the (left) DOWNLOAD button to download and view the picture files.\nThese are only examples. Regions can and should use OpenGraph images that match and sync with their regions.","upload-the-opengraph-images#Upload the OpenGraph Images":"Upload the ten (10) new OpenGraph to an online storage or hosting site, carrying on from Create New OpenGraph Images step #2. The online URLs of region-specific thumbnails should be publicly accessible after upload.\nACAP uploaded its OpenGraph images in Firebase Storage.\nTake note of the images' online URL after upload.","replace-the-opengraph-urls#Replace the OpenGraph URLs":"Open and edit the /server/src/scripts/data/assets_dev.csv CSV file, preferably with Microsoft Excel or other software for editing tabular data, showing a visual overview of tables and columns.\nReplace the URL values under the url \"CSV\" column of the rows whose page column values are \"og\" and whose filename column content starts with \"og_\" prefix with the new OpenGraph image URLs from Upload the OpenGraph Images - step #2\nRefer to the format, content, and structure of the /server/src/scripts/data/assets_dev.csv CSV file when replacing values.\nfilename\tpage name\tpublic page route\tog_home\tHome Page\t/\tog_services\tACAP Services\t/weather-services\tog_calendar\tCropping Calendar\t/cropping-calendar-v2\tog_recommendations\tSeasonal / 10-Day Recommendations\t/agroclimatic-services\tog_bulletins\tBulletins PDF Download\t/bulletins\tog_bulletins_10day\t10-Day Bulletins PDF Download\t/bulletins/weather\tog_bulletins_seasonal\tSesaonal Bulletins PDF Download\t/bulletins/seasonal-outlook\tog_bulletins_typhoon\tSpecial Bulletins PDF Download\t/special-weather-forecast\tog_admin\tAdmin Login\t/admin/login\tog_superadmin\tSuperadmin Login\t/superadmin/login","upload-the-new-opengraph-urls#Upload the New OpenGraph URLs":"Upload the new OpenGraph URLs (in the assets_dev.csv CSV file) to the development and production Firestore database.\nUpdate the server .env file with the production Firebase variables: FIREBASE_SERVICE_ACC and FIREBASE_PRIVATE_KEY.\nRun the server NPM script:\nnpm run seed:11_assets\nUpdate the server .env file with the development Firebase variables: FIREBASE_SERVICE_ACC and FIREBASE_PRIVATE_KEY.\nRe-run the NPM script on step #2.\nDeploy to the¬†production¬†environment (after deploying first to the¬†development¬†environment since this is part of the deployment process) to view the updates on the live production site.","confirm-the-new-opengraph-images#Confirm the New OpenGraph Images":"Load the production website on a browser tab after successfully deploying to the¬†production¬†environment on the¬†Upload the New OpenGraph URLs - step #5.\nInspect the web page elements by right-clicking on the page and then selecting the Inspect option.\nLook for the <meta> property property=\"og:image\" under the <head> tag. Its content attribute should contain the OpenGraph image URL encoded in the assets_dev.csv CSV file. For example:\n<meta property=\"og:image\" content=\"https://firebasestorage.googleapis.com/v0/b/amia-cis-dev.appspot.com/o/media%2Fimages%2Fopengraph%2F1200x600%2Fog_home_1200.png?alt=media&token=51f9241c-45da-456e-9906-677c2f8fe93a\">\nShare one of the public web pages in social media, for example, in a Meta (Facebook) post. Observe if the new Opengraph thumbnails are visible.\nNew OpenGraph thumbnails may take some time to display the latest pictures from some image hosting providers, such as Firebase Storage, depending on its server settings for maxAge in seconds, even if its new OpenGrapgh image URL is already visible in the <meta> tag from step #3."}},"/post-installation/pdf":{"title":"PDF Bulletins","data":{"":"ACAP's bulletin PDFs use hard-coded Bicol-related text in their headers and footers to allow flexible manual layout adjustments. These static elements should be updated with text relevant to the new region.\nThis section covers how to update the static text content within the PDF bulletin layouts. To edit or create new PDF layouts, refer to the PDF Development layout guide.","edit-the-logos#Edit the Logos":"Replace the Region 5 logos with new region-related logos in these directories:\n/server/src/utils/pdf/livereload/public/common/images\n/server/src/utils/pdf/livereload/public/tenday/images\n/server/src/utils/pdf/livereload/public/special-signal/images","seasonal-bulletin-pdf#Seasonal Bulletin PDF":"","edit-the-seasonal-html-file#Edit the Seasonal HTML File":"Open the seasonal PDF's HTML layout:/server/src/utils/pdf/livereload/public/seasonal/index.html\nReplace Region 5's header text with new region text.\nREGIONAL FIELD OFFICE NO. 5\r\nSan Agustin, Pili, Camarines Sur, 4418\r\nhttp://bicol.da.gov.ph\nReplace Region 5's footer text with new region text.\nDEPARTMENT OF AGRICULTURE SUPPORTS\r\n- Pre-positioned planting materials and other farm inputs\r\n- Research station available for livestock evacuations\r\n- Availability of ropes, power sprayer, mist blowers, laminated sacks and  water drums\r\n- Drugs and biologics for livestocks\r\n- Farm machineries stationed in the DA RFO 5 and Research Outreach Station in every province\r\n- Technical assistance for farm operations\r\n- Climate Information services","edit-the-seasonal-ejs-file#Edit the Seasonal EJS File":"Open the seasonal PDF's EJS layout file in  /server/src/utils/pdf/livereload/templates/pdf-seasonal.ejs\nApply the header and footer text updates similar with Edit the Seasonal HTML File steps #2 and #3 in this file.","10-day-bulletin-pdf#10-Day Bulletin PDF":"","edit-the-10-day-html-file#Edit the 10-day HTML File":"Open the 10-day PDF's HTML layout:/server/src/utils/pdf/livereload/public/tenday/index.html\nReplace Region 5's header text with new region text.\nREGIONAL FIELD OFFICE NO. 5\r\nSan Agustin, Pili, Camarines Sur, 4418\r\nhttp://bicol.da.gov.ph\nReplace Region 5's footer text with new region text.\nDEPARTMENT OF AGRICULTURE SUPPORTS\r\n- Pre-positioned planting materials and other farm inputs\r\n- Research station available for livestock evacuations\r\n- Availability of ropes, power sprayer, mist blowers, laminated sacks and  water drums\r\n- Drugs and biologics for livestocks\r\n- Farm machineries stationed in the DA RFO 5 and Research Outreach  Station in every province\r\n- Technical assistance for farm operations\r\n- Climate Information services","edit-the-10-day-ejs-file#Edit the 10-day EJS File":"Open the 10-day PDF's EJS layout file in  /server/src/utils/pdf/livereload/templates/pdf-tenday.ejs\nApply the header and footer text updates similar with Edit the 10-day HTML File steps #2 and #3 in this file.","special-weather-bulletin-pdf#Special Weather Bulletin PDF":"","edit-the-special-html-file#Edit the Special HTML File":"Open the special weather PDF's HTML layout:/server/src/utils/pdf/livereload/public/special-signal/index.html\nReplace Region 5's header text with new region text.\nREGIONAL FIELD OFFICE NO. 5\r\nSan Agustin, Pili, Camarines Sur, 4418\r\nhttp://bicol.da.gov.ph\nReplace Region 5's footer text with new region text.\nDEPARTMENT OF AGRICULTURE SUPPORTS\r\n- Pre-positioned planting materials and other farm inputs\r\n- Research station available for livestock evacuations\r\n- Availability of ropes, power sprayer, mist blowers, laminated sacks and  water drums\r\n- Drugs and biologics for livestocks\r\n- Farm machineries stationed in the DA RFO 5 and Research Outreach Station in every province\r\n- Technical assistance for farm operations\r\n- Climate Information services","edit-the-special-ejs-file#Edit the Special EJS File":"Open the special weather PDF's EJS layout file in  /server/src/utils/pdf/livereload/templates/pdf-special-signal.ejs\nApply the header and footer text updates similar with Edit the Special Weather HTML File steps #2 and #3 in this file."}},"/post-installation/province-codes":{"title":"Province Codes","data":{"":"Province codes refer to the three-letter or two-letter shortcodes abbreviation for a province. For example Region 5 Bicol has:\nProvince\tCode\tAlbay\tALB\tCamarines Norte\tCN\tCamarines Sur\tCS\tCatanduanes\tCAT\tMasbate\tMAS\tSorsogon\tSOR","default-values#Default Values":"The seeder scripts assigns the first three letter of a provice for its short code during the Installation - Seed default data step.","update-the-default-values#Update the Default Values":"These steps are optional if there is a need to change the default-generated province shortcodes. Follow the steps to update the provinces' default three-letter short code.\nThese steps require a successful run of the Initialization steps before proceeding.","edit-the-codes-json-file#Edit the codes JSON file":"Open the /server/src/scripts/uploaders/province_codes/data.json file.\nReplace the JSON keys with new \"province names\" matching those entered in the server .env file.\nReplace the \"code\" JSON key values with new two or three-letter province shortcodes.\nUpdate the \"full\" JSON key values with new \"province names.\"","upload-the-new-province-shortcodes#Upload the new province shortcodes":"Navigate to the server directory using a terminal.\nRun this command switching between the development and production .env files.\nnpm run upload:province_codes"}},"/post-installation/recommendations":{"title":"Recommendations Dataset","data":{"":"This section describes methods for uploading ACAP's recommendations dataset to the database, which it uses for generating public crop recommendations or bulletin PDFs.It details guides on uploading ACAP's recommendations dataset for the latest¬†ACAP 2.0¬†version. It also discusses upload methods for the older¬†ACAP 1.0 recommendations for backtracking purposes."}},"/post-installation/recommendations/recommendations-v1":{"title":"ACAP 1.0 Crop Recommendations","data":{"introduction#Introduction":"ACAP 1.0 uses¬†NPM scripts¬†to parse, validate, and upload recommendations data from a local Excel file. Similar to the¬†ACAP 1.0 cropping calendar data, only developers can upload recommendations by running the NPM script on a terminal.\nThis section describes methods for uploading the local recommendations dataset for the older ACAP 1.0. Its last stable version is Release/Tag version v9.5.6,¬†accessible in the¬†climate-services-webportal-v1 and acap-v2 code repositories.Follow this¬†link to view recommendations dataset upload instructions for the latest¬†ACAP 2.0.","data-format#Data Format":"ACAP 1.0 requires initial recommendations data in an Excel file, following the format and structure defined in the¬†/server/src/scripts/data/recommendations_html_acap_bicol.xlsx or the mock_recommendations_html_v2.xlsx¬†samples. This Excel file has tabs containing formatted recommendations data, with crop stages and weather forecast rainfall conditions, for the seasonal, 10-day, and severe cyclone weather crop recommendations.\nThe crop stage labels in the Excel columns should match the crop stage codes defined in the ACAP 1.0 cropping calendar raw CSV file to ensure the correct association of crop stages with target recommendations.","upload-recommendations#Upload Recommendations":"ACAP 1.0 uploads its recommendations dataset to the Firestore database using NPM scripts, accessible only to developers.","prepare-recommendations-data#Prepare recommendations data":"Prepare the recommendations dataset in an Excel file similar to the recommendations samples described in the Data Format section.\nPut the EXCEL file in the /server/src/scripts/uploaders/recommendations directory.","use-a-target-environment#Use a target environment":"Open the server .env file. Update the FIREBASE_SERVICE_ACC and FIREBASE_PRIVATE_KEY keys with the development or production key values.","run-the-npm-script#Run the NPM Script":"This script only works for ACAP 1.0, whose last stable version is¬†v9.5.6. It has no backward compatibility for ACAP 2.0 and later versions and thus may fail to work as expected.\nNavigate to the /server directory from a terminal.\nRun the command, replacing recommendations_html_acap_bicol.xlsx with the filename of a recommendations EXCEL file placed in the directory specified in the Prepare recommendations data step:\nnpm run upload:recommendations --localfilename=recommendations_html_acap_bicol.xlsx\nEnsure running the script from step #3 is completed successfully."}},"/post-installation/recommendations/recommendations-v2":{"title":"ACAP 2.0 Crop Recommendations","data":{"introduction#Introduction":"This section describes methods for uploading the ACAP 2.0 recommendations dataset, whose latest stable version is Release/Tag version ,¬†accessible in the¬†acap-v2¬†repository.Follow this¬†link to view upload instructions for the older ACAP 1.0 recommendations dataset.","data-format#Data Format":"The latest updates for ACAP 2.1, starting with @commit 95a97cd in the acap-v2 dev branch, use a new Crop Recommendations Excel template different from the ones mentioned on this page.\nThese Crop Recommendations are only compatible up to @commit ee49568 in the acap-v2 dev branch.\nKindly chat the ACAP group chat for more information about the new Crop Recommendations Excel file for ACAP 2.1. Alternatively, you may use the temporary workaround until a final update to ACAP's ongoing items becomes available.\nACAP 2.0 uses recommendations data similar to the ACAP 1.0 raw data, added with climate risk information and exclusion of several Excel columns. View its raw EXCEL data files in the¬†/server/src/scripts/data/dataset_v2.0¬†directory to gain insight into its new contents and data structure.The samples only display the ACAP 2.0 recommendations dataset for the Rice and Corn crops.\nThe crop stage labels should match the crop stage codes defined in the ACAP 2.0 cropping calendar Excel files specific to target crops to ensure the correct association of crop stages with target recommendations.\nSupport for Multiple Crops \r\nDevelopers can add crop stages and labels for other crops, following the crop stages code and label format in the¬†/client/src/utils/constants.js¬†file and by creating recommendations datasets for other crops similar to the sample recommendations Excel files described in the¬†Data Format¬†section as a reference.","upload-recommendations#Upload Recommendations":"ACAP 2.0 uploads its recommendations dataset using an upload form on the Manage Recommendations page, requiring Admin login.\nThe crop stage labels should match the crop stage codes defined in the ACAP 2.0 cropping calendar Excel files specific to target crops to ensure the correct association of crop stages with target recommendations.","prepare-the-frontend--backend#Prepare the frontend / backend":"Update the frontend and backend codes with necessary data for supporting other crops, with data formats described in the Data Format section.\nOverwrite and commit the sample cropping calendar Excel template files rice_recommendations_v4.xlsx and corn_recommendations_v3.xlsx in the server directory with the correct regional recommendation files to change the default sample Excel templates during live deployment.Also, change the values of the environment variables (RECOMMENDATIONS_RICE_EXCEL_FILE, RECOMMENDATIONS_CORN_EXCEL_FILE) associated with its file names in the client .env file and GitHub Secrets if there is a need to use different file names or add new templates.\nNOTE: This step is compatible until @commit¬†95a97cd¬†(latest updates) in the¬†acap-v2 dev¬†branch. However, the default crop recommendations Excel templates inside the repository only work until the previous updates @commit ee49568 (pre-ACAP 2.1). Kindly chat the ACAP group chat for more information about the new Crop Recommendations Excel file format and management for ACAP 2.1 if it's missing in the online documentation.","login-as-admin#Login as Admin":"Login as an ACAP admin, then, navigate to the Recommendations Management page in the /admin/manage-recommendations route.","upload-recommendations-1#Upload Recommendations":"Upload Recommendations: Select a¬†\"Crop Type\"¬†from the available¬†crops list and select options.\nUpload an Excel file: Press the SEARCH icon.\nBrowse for a recommendations Excel dataset that corresponds to the selected¬†Crop Type¬†in¬†step #1.\nPress the UPLOAD button.\nWait for the upload success or fail status response to appear."}},"/post-installation/site-search":{"title":"Search Bar: Site Search","data":{"introduction#Introduction":"This guide shows how to make new public pages searchable via the site's Search Bar by updating data.js and running a keyword indexer script. ACAP configures this feature via a script in/server/src/scripts/page_indexer/.\nnpm run build:page_index indexes keywords from live public pages defined in data.js and saves them to the database. It runs automatically after deployment, but you can also run it locally for testing.\nOptional: Only needed when adding new public pages or updating existing ones for search indexing.\nINFO: The search method and keyword extraction process are expected to extract keywords only from simple static pages. Pages with longer or complex content may require a different approach.","add-a-page-to-search#Add a Page to Search":"(Quick summary)\nAdd id attributes to text containers in your page.\nUpdate data.js with path, name, info, and selectors.\nRun npm run build:page_index locally to test.\nCommit and push changes.\nDeploy and verify search results.","detailed-steps#Detailed Steps":"","prepare-the-new-public-page-for-indexing#Prepare the new public page for indexing":"Add unique HTML id attributes to the container <div> of target elements with text content that you'd like to extract keywords from.\nFor example, if there is a new About Us page:\nreturn (\n  <Box id=\"about-us-content\">\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor...\n  </Box>\n)","inspect-the-public-pages-file-definition#Inspect the public pages file definition":"Open the \"/server/src/scripts/page_indexer/data.js\" file.\nObserve the Object structure of the elements in the sites[] array, eg., the entry for the public \"Weather Services\" page,\nconst sites = [\n  {\n    path: 'weather-services',\n    name: 'ACAP Services',\n    info: 'Seasonal and 10-Day Weather Forecasts, and Special Weather Advisory',\n    selectors: [\n     '#contents-seasonal-forecast',\n     '#contents-tenday-forecast',\n     '#contents-special-weather-forecast'\n    ]\n  },\n  ...\n]\nüëâ Click to view the sites[] Object key definitions\nKey\tDefinition\tpath\tFrontend (NextJS) route to the target page\tname\tPage title\tinfo\tShort summary or description about the page\tselectors\tArray of HTML id attributes in the page in which to extract keywords from. Each element starts with a #\t\nFailing to add appropriate \"selectors\" will skip indexing the search keywords.\nEnsure all public pages load correctly. There will be errors in indexing if a page is inaccessible or has loading errors.","add-a-new-page-file-entry#Add a new page file entry":"Create a new entry in the \"/server/src/scripts/page_indexer/data.js\" file under the sites[] array corresponding to a newly-created public page.\nFor example, to add the About Us page from step #1:\nconst sites = [\n  {\n    path: 'about-us',\n    name: 'About Us',\n    info: 'Information and details about our company',\n    selectors: ['#about-us-content']\n  },\n  ...\n]","test-extracting-keywords#Test extracting keywords":"Set LIVE_ORIGIN=http://localhost:3000 in the server .env\nRun the local website\nnpm run dev\nOpen http://localhost:3000 to verify the site is running.\nRun the server NPM script\nnpm run build:page_index\nFix errors that may occur during this step.\nIf there are no errors in the previous step, type keyword(s) from the sample About Us page in the Search Bar, eg.,\nlorem ipsum\nThe About Us page should display in the search results.","commit-the-datajs-file#Commit the data.js file":"If there are no errors in the previous steps and the search keyword(s) appear in step #4, proceed to commit and push the updated data.js file.","deploy#Deploy":"When you push changes, GitHub Actions will automatically run npm run build:page_index during deployment. Verify that the new keywords appear in the live Search Bar."}},"/post-installation/weather-forecasts":{"title":"PAGASA Weather Forecasts","data":{"":"This section expands on the Installation guide, detailing the setup steps for updating ACAP's Seasonal, 10-Day, and Special (Severe Cyclone) weather forecast data from the Philippine Atmospheric, Geophysical and Astronomical Services Administration (PAGASA).\nThese steps are dependent on the first-time successful initialization and setup from the Installation section."}},"/post-installation/weather-forecasts/seasonal-forecast":{"title":"PAGASA Seasonal Weather Forecast","data":{"introduction#Introduction":"After achieving a successful initialization from following the steps in the Installation section, developers will notice a blank, default Seasonal weather forecast table in the public ACAP Services ‚Üí Seasonal Forecast page.Follow these steps to update it with the latest PAGASA seasonal weather forecast data.","pagasa-seasonal-weather-forecast-excel-file#PAGASA Seasonal Weather Forecast Excel File":"ACAP Bicol, having a Memorandum of Agreement (MOA) with PAGASA, regularly receives PASAGSA seasonal weather forecast data in Excel file format through email. ACAP Bicol Admins upload these to the portal to update the seasonal weather forecast data.\nFor consistency, ACAP's seasonal weather forecast processing scripts expect an Excel data format similar to the \"/server/src/scripts/data/pagasa_seasonal_v2.xlsx\" Excel file. PAGASA shared this file for Bicol's¬†November 2022 - April 2023¬†seasonal weather forecast.\nFor reference, the data in the seasonal weather forecast Excel file is also available in JPEG/picture format at the PAGASA Seasonal Forecast web page at https://www.pagasa.dost.gov.ph/climate/climate-prediction/seasonal-forecast under the Forecast Rainfall Analysis section.","update-the-seasonal-weather-forecast#Update the Seasonal Weather Forecast":"","obtain-seasonal-weather-forecast-data#Obtain Seasonal Weather Forecast Data":"Obtain the latest PAGASA seasonal weather forecast Excel file.Developers (or Admins) can use the default seasonal weather forecast Excel file described in the¬†PAGASA Seasonal Weather Forecast Excel File, using values for their respective region, if the PAGASA-shared seasonal weather forecast Excel file is not readily available.\nWhen editing the sample PAGASA Seasonal Excel file, note to supply nda text for cells that have no values.","upload-the-seasonal-weather-forecast-excel-file#Upload the Seasonal Weather Forecast Excel File":"Sign in as an ACAP Admin, then go to the ACAP Settings ‚Üí SEASONAL tab. This page is accessible in the localhost route:\nhttps://localhost:3000/admin/weather/\nPress the SEARCH icon button under the Upload an Excel file label. Look for and select the target PAGASA seasonal weather forecast Excel file from the local hard drive.\nFill in the¬†input values under the Tropical Cyclone Input¬†section. Refer to the seasonal Excel file's 3rd tab, which contains pictures of the expected number of tropical cyclones in JPEG/picture format to populate these values. This step is required to upload the Excel file on step #4.\nPress the UPLOAD button beside the SEARCH icon to upload the Excel file. A successful upload should update the default seasonal weather forecast data with new data defined in the Excel file.","update-weather-systems-data#Update Weather Systems Data":"Add, edit or delete items under the Weather Systems that May Affect the Region section in the ACAP Settings ‚Üí SEASONAL tab.","el-nino--la-nina-data#El Nino / La Nina Data":"ACAP displays El Nino / La Nina information with data sourced from the PAGASA El Ni√±o / La Ni√±a Monitoring web page at https://www.pagasa.dost.gov.ph/climate/el-nino-la-nina/monitoring.It updates the data using a cron job, running in a GitHub Actions Scheduled Workflow every Sunday.\nManual mechanisms for triggering the update are currently not available.","acap-rest-api#ACAP REST API":"Seasonal weather forecast data is available in the REST API endpoints (plus other query parameters) if the ACAP-RCMAS REST APIs are active:\nCurrent data: GET /api/weatherforecast?type=seasonal\nHistorical data: GET /api/weatherforecast/archives?type=seasonal","tools#Tools":"","pagasaexcel#pagasaexcel":"A Node Package Manager (NPM) script that parses, validates, extracts, and formats data from the PAGASA seasonal Excel file (\"pagasa_seasonal_v2.xlsx\") into a JavaScript object, ready for upload to the Firestore database.\nAvailable in the /server/src/scripts/pagasaexcel directory.","recommendations#Recommendations":"PAGASA has discussed creating a REST API for sharing weather forecast data. ACAP should integrate with this API after becoming available as an upgrade to its semi-automatic method of uploading PAGASA-shared seasonal weather forecast Excel files."}},"/post-installation/weather-forecasts/special-forecast":{"title":"PAGASA Special (Severe Cyclone) Weather Forecast","data":{"introduction#Introduction":"ACAP displays tropical cyclone data sourced from PAGASA's Tropical Cyclone Bulletin web page at https://www.pagasa.dost.gov.ph/tropical-cyclone/severe-weather-bulletin.\nIt regularly syncs with data from the PAGASA web page using a cron job that runs every two (2) hours in a GitHub Actions Scheduled Workflow, following a successful initialization and deployment setup.","manual-update#Manual Update":"These steps describe running the cron script to trigger a manual update to ACAP's Special (Severe Cyclone) Weather Forecast data.","use-a-target-environment#Use a target environment":"Open the server .env file. Update the FIREBASE_SERVICE_ACC and FIREBASE_PRIVATE_KEY keys with the development or production key values.","run-the-npm-script#Run the NPM Script":"Navigate to the /server directory from a terminal.\nRun the command:\nnpm run cron:cyclone","re-run-on-github-actions#Re-run on GitHub Actions":"This method is an alternate option for running the NPM script aside from¬†step #2, available after confirming a successful setup and deployment of the GitHub Actions cron jobs.\nGo to the forked repository's Actions tab.\nSelect the CRON Scrape and Update Cyclone Information workflow in the left-side menu.\nSelect and click one of the latest successful workflow runs.\nPress the button on the upper right with the label \"Re-run all jobs.\"","trigger-update-in-acap-settings#Trigger Update in ACAP Settings":"Sign in as an Admin to the ACAP website.\nGo to the ACAP Settings ‚Üí TROPICAL CYCLONE tab.\nPress the SYNC button.\nWait for the update success or fail status response to appear. A successful trigger will display an updated \"Date synced\" field in the Current Data Update Summary section, displaying the latest time and date of the successful update.","acap-rest-api#ACAP REST API":"Special weather forecast data is available in the REST API endpoints (plus other query parameters) if the ACAP-RCMAS REST APIs are active:\nCurrent data: GET /api/weatherforecast?type=special\nHistorical data: GET /api/weatherforecast/archives?type=special","recommendations#Recommendations":"Since the special weather forecast updater runs in an NPM script, options are available for running it in OS-native cron or task schedulers as an alternative to using GitHub Actions Scheduled Workflow."}},"/post-installation/weather-forecasts/tenday-forecast":{"title":"PAGASA 10-Day Weather Forecast","data":{"":"Starting August 31, 2025, PAGASA will no longer provide the 10-Day Excel files. Check the Announcements section for more information.","introduction#Introduction":"ACAP sources its 10-day weather forecast data from PAGASA's public 10-day weather forecast data (available as Excel files from day 1 - day 10) in their 10-Day Climate Forecast web page at https://www.pagasa.dost.gov.ph/climate/climate-prediction/10-day-climate-forecast.This section describes updating the initial 10-day weather forecast data with the latest values.\nACAP's initialization steps from the Installation and Setup section use an older set of 10-day weather forecast data for demonstration.\nAfter confirming successful initialization and deployment setup, ACAP's cron script, running in a GitHub Actions Scheduled Workflow, will regularly sync with the latest posted PAGASA 10-data weather forecast daily once between 9:30 AM - 12:00 PM.","update-steps#Update Steps":"","use-a-target-environment#Use a target environment":"Open the server .env file. Update the FIREBASE_SERVICE_ACC and FIREBASE_PRIVATE_KEY keys with the development or production key values.","run-the-npm-script#Run the NPM Script":"Navigate to the /server directory from a terminal.\nRun the command:\nnpm run cron:tenday","re-run-on-github-actions#Re-run on GitHub Actions":"This method is an alternate option for running the NPM script aside from¬†step #2, available after confirming a successful setup and deployment of the GitHub Actions cron jobs.\nGo to the forked repository's Actions tab.\nSelect the CRON Download, Parse and Upload Excel Files workflow in the left-side menu.\nSelect and click one of the latest successful workflow runs.\nPress the button on the upper right with the label \"Re-run all jobs.\"","manual-data-upload#Manual Data Upload":"Sign in as an Admin to the ACAP website.\nGo to the ACAP Settings ‚Üí 10-DAY tab.\nFollow the instructions for manually updating the 10-day weather forecast data. It involves:\nDownload the day 1 - day 10 PAGASA 10-day weather forecast Excel files from PASAGA's 10-Day Climate Forecast web page to the local PC or laptop.\nUpload all ten (10) of the Excel files using the ACAP Settings ‚Üí 10-DAY upload form.\nPress the SUBMIT button after selecting the Excel files from step #3.\nWait for the update success or fail status response to appear. A successful trigger will display an updated \"Date synced\" field in the Current Data Update Summary section, displaying the latest time and date of the successful update.","acap-rest-api#ACAP REST API":"10-day weather forecast data is available in the REST API endpoints (plus other query parameters) if the ACAP-RCMAS REST APIs are active:\nCurrent data: GET /api/weatherforecast?type=tenday\nHistorical data: GET /api/weatherforecast/archives?type=tenday","recommendations#Recommendations":"Since the 10-day weather forecast updater runs in an NPM script, options are available for running it in OS-native cron or task schedulers as an alternative to using GitHub Actions Scheduled Workflow."}},"/post-installation/webmap":{"title":"Web Map on Home Page","data":{"":"This section covers how to update the GeoJSON map boundaries on the Home Page (the colored province overlays).This step is labelled (Optional) because the SHAPEFILE and new AMIA Villages data for the target region may yet not be readily available during Installation.","required-files#Required Files":"These steps require the files:\nSHAPEFILE (.shp, .shx, .prj, .dbf and .cpg files) of the new region\nNew AMIA Villages information of the new region in a CSV file, following the format in the\r\n/server/src/scripts/data/amia_villages_r5.csv file.\nSince ACAP uses the provinces and municipality naming conventions from the PAGASA 10-day weather forecast Excel file, please ensure the SHAPEFILE and AMIA Villages CSV file share similar naming conventions with it.","normalize-the-shapefile#Normalize the SHAPEFILE":"Convert the SHAPEFILE to a normalized, web-friendly GeoJSON file format. (Recommended GeoJSON file size is approximately less than 500KB).\n(Optional) Use QGIS to check the SHAPEFILE for errors. Follow steps No. 2, No. 3 and No. 4 described in the URL link to check and fix SHAPEFILE errors.\r\nhttps://github.com/ciatph/ciatph.github.io/issues/33#issuecomment-769405843\n(Optional) Use the https://github.com/ciatph/shapefile-simplify tool to normalize, simplify and convert the SHAPEFILE to GeoJSON, playing around with PERCENTAGE % values that lead to a small file size with acceptable visual effects when loaded on the Home page.ACAP 1.0's GeoJSON file is available in /server/src/scripts/data/geojson/acap-bicol.geojson file for reference.","upload-the-geojson-file#Upload the GeoJSON file":"","mapbox-hosting#MapBox Hosting":"Upload the normalized GeoJSON file to MapBox, or any hosting service that allows serving GeoJSON content over HTTP from Normalize the SHAPEFILE step #2 or #3. The original ACAP 1.0 uses MapBox (Datasets) for hosting.Update the following variables when using MapBox:\nMAPBOX_BASEMAP_STYLE_ID\r\nMAPBOX_DATASET_ID\r\nMAPBOX_API_KEY","firebase-storage-hosting#Firebase Storage Hosting":"You can use Firebase Storage in case a new MapBox account is not readily available.Replace the NEXT_PUBLIC_GEOJSON_URL variable with the GeoJSON file's remote URL after uploading it to Firebase Storage.","use-a-target-environment#Use a Target Environment":"Open the server .env file. Update the FIREBASE_SERVICE_ACC and FIREBASE_PRIVATE_KEY keys with the development key values.","upload-the-amia-villages-data#Upload the AMIA Villages Data":"Upload the new AMIA Villages information (CSV file) to Firestore.\nCopy the new CSV file to /server/src/scripts/data/amia_villages_r5.csv\nRun the server NPM script:\nnpm run seed:01_amiavillages\nRe-deploy to the development environment to view the updates on the live site.\nRepeat starting from the Use a Target Environment using the production Firebase keys to view the updates on the live production GitHub Pages site."}},"/references":{"title":"References","data":{"":"This section contains URL links to partners and various online references used by ACAP for development.","websites#Websites":"ACAP Bicol Official Website","partners-and-resources#Partners and Resources":"Department of Agriculture (DA)\nDepartment of Agriculture - Bicol Region (DA RFO 5)\nUniversity of the Philippines Los Ba√±os Foundation Incorporated (UPLBFI)\nAlliance Bioversity & CIAT\nDOST-PAGASA\nAMIA CIAT Demo","frontend#Frontend":"NextJS\nMaterial UI 5 (MUI5) - version 5 (v5)\nGitHub Pages\nFirebase JavaScript SDK - Firebase Authentication, Cloud Firestore and Cloud Storage\nFirebase Hosting","backend#Backend":"NodeJS\nFirebase Admin SDK - Firebase Auth, Cloud Firestore and Cloud Storage\nRender\nVercel\nGitHub Actions","firebase-authentication#Firebase Authentication":"Firebase Authentication\nFirebase Custom Claims\nFirebase Admin SDK","database#Database":"Firestore Web API\nFirestore REST APIs\nFirestore REST API (Explorer)\nFirestore Rules","online-storage#Online Storage":"Firebase Storage Web APIs","miscellaneous#Miscellaneous":"Assets Used for this Site\nCustom CMS"}},"/requirements":{"title":"Requirements","data":{"":"This post describes the dependencies and requirements needed to run run ACAP 1.0 (ACAP-Bicol) on a PC or laptop for local development.","development-machine#Development Machine":"Windows/Mac PC or laptop\n@least 8GB RAM or higher","software-installed#Software Installed":"","main-development#Main Development":"Visual Studio Code (VSCode) IDE\nversion: v1.79.2 (or versions capable of running NodeJS in its Integrated Terminal)\nnvm\nnvm is optional, if you can install NodeJS LTS version 16.14.2 on item #3\nFor Windows OS\nInstall with nvm-windows\nversion 1.1.12\nFor other OS\nPlease refer to guides for installing nvm for your PC or laptop\nNodeJS LTS version 16.14.2\n(preferrably installed using nvm)\nnode version: 16.14.2\nnpm version: 8.5.0\nGit Terminal\nFor Windows OS: GitBash\nFor non-Windows OS: (Please refer to the recommended git terminal installation methods for your OS)","bulletin-pdf-development#Bulletin PDF Development":"Yarn\nNote: the project uses the classic stable version v1.22.22\nInstalled with \"npm install -g yarn\"","programming-languagesservices#Programming Languages/Services":"React\nNodeJS\nJavaScript\nGitHub\nFirebase\nFirebase JavaScript SDK (for frontend web clients)\nFirebase Admin SDK (for backend NodeJS)\nFirebase Services (Components) - used within the contexts of the Firestore JavaScript SDK and the Firebase Admin SDK\nAuthentication [1]\nFirestore (Cloud Firestore) [2]\nStorage (Cloud Storage) [3]\nHosting [4] (Only used with the development environment)","cloud-service-accounts-standard-pricing#Cloud Service Accounts (standard pricing)":"GitHub (2)\nhttps://github.com\nRender (2)\nhttps://render.com\nFirebase (2) accounts\nSeparate Firebase accounts to use with the development and production environments\nhttps://firebase.google.com\nSemaphore\nhttps://semaphore.co","docker#Docker":"ACAP promotes using NodeJS to run on localhost development. Using Docker is optional, since it has Dockerfiles configured for local development and production deployment.Users are expected to have experience managing installing and setting-up Docker, if they are going to use it for development or production deployment.","microsoft-windows-1011#Microsoft Windows 10/11":"Docker Desktop\nDocker Compose version v2.27.1-desktop.1\nDocker Engine version 26.1.4, build 5650f9b","ubuntu-22041#Ubuntu 22.04.1":"Docker version 23.0.1, build a5eeb1\nDocker Compose v2.16.0"}},"/security":{"title":"Security Guidelines","data":{"":"ACAP adheres to strict security practices and development patterns defined by its technology stack \"while considering compatible options with its limited (default) upgradable standard-pricing cloud services\" starting from its initial 1.0 version.Please ensure continued compliance with these security standards when extending ACAP to add or enhance new features while actively considering its currently available plans, options, and feature requirements at hand.\nNOTE: Further enhancements and feature updates to the initial ACAP 1.0 version may introduce new requirements to address additional use cases. Please ensure that security measures meet the expectations outlined in these new requirements.","database#Database":"Manually test and ensure using the Firestore Web API and Firestore REST APIs that:\n(a) Signed-in users cannot perform CREATE/EDIT/DELETE operations in the Firestore collections and documents defined in the Firestore Rules.\nNOTE: If there is a need to perform CREATE/EDIT/DELETE operations \"directly\" in the Firestore collections or documents using the Firestore Web API or Firestore REST APIs, please ensure the creation and testing of robust, new Firestore Rules that will meet the \"new\" requirements (ACAP 1.0 only performs such operations thru the backend NodeJS REST APIs, Database #2, Database #3). This ensures manageable security and safety, preventing security breaches like the cross-site scripting (XSS) attack example detailed at:\nA YouTube video detailing steps for exploiting XSS vulnerabilities in the ACAP 2.0 Crop Recommendations at https://www.youtube.com/watch?v=b9UZ6_OCTaY has been set to private permissions to limit exposure. This video is a resource for understanding the security challenges associated with these vulnerabilities and ACAP, which occurred starting on ACAP 2.0 due to new development approaches and priorities.For ACAP Maintainers or developers interested in exploring the content, please contact the current active ACAP Maintainer(s) for an invitation to access the video. Engaging with this material can provide insights into the security considerations that have been acknowledged and inform future enhancements to the system's security measures.\n(b) Signed-in users cannot CREATE new Firestore collections and documents\n(c) Public users without sign-in authentication cannot VIEW sensitive information such as phonebook contacts and email information, by ensuring their Firestore collections are using the correct role/access-based Firestore Security Rules.\nEnsure that all mutative \"WRITE\" operations in the Firestore database occur only through authenticated HTTPS requests in the backend (NodeJS) REST APIs. (see also Server for more information).\n(a) ACAP 1.0's Firestore Rules strictly prohibits Database #1.a and Database #1.b to enforce this.\n(b) If new requirements allow item Database #1.a to \"directly\" perform CREATE/EDIT/DELETE operations in Firestore collections or documents using the Firestore Web API or Firestore REST APIs, please ensure that \"new\" and robust Firestore Rules are created and thoroughly tested. These Rules may need to be separate from ACAP 1.0, which \"discourages this approach unless Firestore Rules can be properly enforced\".\nEnsure proper server-side validation when mutating data through the backend (NodeJS) REST APIs using¬†validation scripts in middleware or the¬†controller¬†scripts.\nFirestore database security relies on properly tested Firestore Rules to ensure security, especially if its rules do not disable all VIEW/CREATE/EDIT/DELETE operations.\nPlease ensure that \"new\" and robust Firestore Rules are created and thoroughly tested, in case new database components or requirements need to be added to the ACAP 1.0 Firestore database.","firestore-database-rules#Firestore Database Rules":"ACAP's Firestore Security Rules, which enforces strict role/access-based security to the Firestore database, should be copied to the Firebase project's Firestore Rules tab in the Firebase Console. It is located in this file for reference:\n/client/src/firestore.rules\nACAP 2.0 allowed users to edit crop recommendations, a new feature introduced in version 2.0 through weak Firestore Security Rules, making it vulnerable to Cross-Site Scripting (XSS). This lets unauthorized clients (e.g., Postman) modify WYSIWYG-form data without protection if accessed from the Firestore REST APIs. Allowing these in the Firestore Security Rules contradicts the best practices outlined in the Database section, which advocates for data mutation with thorough data validation/sanitation in the Node backend.For more details, refer to GitHub Issues in the parent acap-v2 repository ([1], [2]) or check the Firebase Storage Announcements 2024 under the Are there security concerns I should be aware of?¬†section for information and reference.","sensitive-data-management#Sensitive data management":"Ensure sensitive data and environment variables are never statically generated and deployed to the GitHub Pages or Firebase Hosting static hosting websites.\nSensitive data, secured with Firebase Authentication, Firebase Custom Claims (User/Admin Accounts #1, #2), and Firestore Rules (Database #1.c), is dynamically fetched from the Firestore Database using the Firestore Web APIs or the secure (NodeJS) REST APIs.\nEnsure that Firestore collections containing sensitive data (e.g., \"/phonebook/{docId}\") are using appropriate role/access-based access settings defined in the Firestore Security Rules. This comprises a combination of Firebase Authentication and Firebase Custom Claims.","file-storage#File Storage":"Manually test and ensure, using the Firebase Storage Web APIs, that:\nPublic and signed-in users can only \"READ\" or download the PDF bulletin files.\nPublic and signed-in users cannot UPLOAD or DELETE files.","firebase-storage-security-rules#Firebase Storage Security Rules":"ACAP's Firebase Storage Security Rules enforce strict security by allowing only authenticated requests in the NodeJS backend to upload (PDF) files to the Firebase Cloud Storage while allowing public data (PDF, images) to download from the frontend. It should be copied to the Firebase project's Storage Rules tab in the Firebase Console. It is located in this file for reference:\n/client/src/storage.rules","codebase#Codebase":"Ensure that forked¬†climate-services-webportal-v1¬†(ACAP 1.0) or¬†acap-v2¬†(ACAP 2.0) monorepo code base or copies remain PRIVATE in GitHub and other public platforms.","useradmin-accounts#User/Admin Accounts":"Ensure that Admin accounts are created by the superadmin in the NodeJS backend using Firebase Authentication with Firebase Custom Claims, leveraging the Firebase Admin SDK to ensure maximum security.\nMore information about ACAP's Security requirements is available in its Software Requirements Specifications document in this link (accessible only for developers with access).\nThese Security requirements carry over and apply to ACAP 2.0, even if the Software documents were written for ACAP 1.0. Since no new Software documents are available for the updates made in ACAP 2.0, you may consult the new lead programmer responsible for implementing ACAP 2.0 about detailed upgrades specifics made to the system.","node-package-libraries-npm#Node Package Libraries (NPM)":"ACAP, a web application built with Firebase, Express, React/Next.js, and Node.js, relies on open-source development libraries from the Node Package Manager (NPM) for its client and server applications.Since ACAP's initial development in 2022, many of these libraries may have become outdated as newer versions are released.Developers maintaining ACAP are encouraged to monitor and update these dependencies as needed to benefit from performance improvements, security patches, and new features, possibly requiring using newer Node versions.","-checklist#‚úÖ Checklist":"The ACAP Developer Security Best Practices Checklist article summarizes the main points and highlights of this section and mentions the desirable traits and mindset when it comes to security.","related#Related":"Server Notes\nFirebase Storage Announcements 2024 - Security Concerns","references#References":"","firebase-authentication#Firebase Authentication":"Firebase Authentication [link]\nFirebase Custom Claims [link]\nFirebase Admin SDK [link]","database-1#Database":"Firestore Web API [link]\nFirestore REST APIs [link]\nFirestore Rules [link]","online-storage#Online Storage":"Firebase Storage Web APIs [link]"}},"/troubleshooting":{"title":"Troubleshooting","data":{"":"(docs for this section is under construction)"}},"/video":{"title":"ACAP Video Tutorials ‚ñ∂Ô∏è","data":{"introduction#Introduction":"This wiki discusses the development and cloud deployment approaches and strategies used with ACAP 1.0 (ACAP-Bicol). This page aims to serve as a go-to reference for demonstrating technical methods in videos under the Playlist section and to provide general guidelines and recommended approaches to interact with the ACAP 1.0 source codes.\nThese video tutorials for setting up ACAP were created with compatibility to the initial ACAP (ACAP 1.0, with the last stable version at Release/Tag¬†v9.5.6) released in 2023 but should be more or less still compatible with the newer ACAP versions.\nNewer ACAP versions with drastic new updates may no longer sync with these video tutorials.","tutorials#Tutorials":"ACAP Development Docs","playlist#Playlist":"(Please turn on the CC captions/subtitles and set the playback speed to 2x when watching the videos.)\nhttps://youtube.com/playlist?list=PLk51OcRoDPHbXE_iVwmG_UwmsYwNOPoEP","checklist#Checklist":"Initial ACAP 1.0 Duplication Checklist","requirements#Requirements":"Development Requirements","how-to-proceed#How to Proceed":"Quickly view and skim thru the videos under the Playlist section to get a quick grasp and summary of how ACAP-Bicol is initialized for local development to online (live) deployment.\nInitialize ACAP for your target region for localhost development by going thru the ACAP 1.0 Duplication for New Regions Running on Localhost (Development) Tutorial.\nAt this point, you may want to refer to the online video tutorials for more detailed demonstration on several topics related for ACAP's localhost development:\n06 Initialize the Source Code Repository - Part 1/2\n07 Initialize Firebase (Firestore, Storage, Authentication)\n08 Server setup for localhost development (Testing on Region 7)\n09 Client setup for localhost development (Testing on Region 7)\nRun your client + server ACAP on localhost. Visit and check Initial ACAP 1.0 Duplication Checklist to see if your ACAP initialization fits with success several success metrics for localhost development\nOnline deployment is next after finishing and wrapping up running ACAP on localhost.\nOnline deployment is quite flexible and you may use new methods, techniques and services which you may be more familiar with.\nYou may also follow ACAP's methods for these areas, which are described and demonstrated in more detail in the tutorial videos:\n10 Deployment to Development Environment\nRender Setup - Part 1 / 3  (development)\nInitial Website Deployment to Firebase Hosting - Part 2 / 3\nUsing GitHub Actions - Part 3 / 3\n11 Deployment to Production Environment\nRender Setup - Part 1 / 2  (production)\nWebsite Deployment to GitHub Pages - Part 2 / 3\nPost-Processing from GitHub Pages - Part 3 / 3","video-list#Video List":"01 Create GitHub Account\n02 Create GitHub Repositories\n03 Create Firebase Projects\n04 Create Render Accounts\n05 Create a Semaphore Account\n06 Initialize the Source Code Repository - Part 1/2\n06 Initialize the Source Code Repository - Part 2/2\n07 Initialize Firebase (Firestore, Storage, Authentication)\n08 Server setup for localhost development (Testing on Region 7)\n09 Client setup for localhost development (Testing on Region 7)\n10 Deployment to Development Environment\nRender Setup - Part 1 / 3  (development)\nInitial Website Deployment to Firebase Hosting - Part 2 / 3\nUsing GitHub Actions - Part 3 / 3\n11 Deployment to Production Environment\nRender Setup - Part 1 / 2  (production)\nWebsite Deployment to GitHub Pages - Part 2 / 3\nPost-Processing from GitHub Pages - Part 3 / 3","demo#Demo":"These demos load the website front and backend (upon sign-in) with default Firestore data of the region we used throughout the tutorials (Region 7 provinces and municipalities). To follow updating full UI references of the \"bicol\" text in later updates.","official-production-demo#Official Production Demo":"https://region7-tutorial.github.io/","development-version-demo#Development Version Demo":"https://region7-tutorial-dev.web.app"}}}